/*************************************************************************
 *                                                                       *
 *  SignServer: The OpenSource Automated Signing Server                  *
 *                                                                       *
 *  This software is free software; you can redistribute it and/or       *
 *  modify it under the terms of the GNU Lesser General Public           *
 *  License as published by the Free Software Foundation; either         *
 *  version 2.1 of the License, or any later version.                    *
 *                                                                       *
 *  See terms of license at gnu.org.                                     *
 *                                                                       *
 *************************************************************************/
package org.signserver.admin.gui;

import org.signserver.admin.gui.adminws.gen.LogEntry;
import org.signserver.admin.gui.adminws.gen.LogEntry.AdditionalDetails;

/**
 * Frame displaying the details of an audit log row.
 *
 * @author Markus Kil√•s
 * @version $Id$
 */
public class DisplayAuditlogEntryFrame extends javax.swing.JFrame {
    
    private LogEntry entry;
    
    /** Creates new form DisplayAuditlogEntryFrame */
    public DisplayAuditlogEntryFrame(LogEntry entry) {
        initComponents();
        this.entry = entry;
        setTitle("Audit log entry " + entry.getSequenceNumber() + " on " + entry.getNodeId());
        updateEditor();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setLocationByPlatform(true);
        setName("Form"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(org.signserver.admin.gui.SignServerAdminGUIApplication.class).getContext().getResourceMap(DisplayAuditlogEntryFrame.class);
        jEditorPane1.setContentType(resourceMap.getString("jEditorPane1.contentType")); // NOI18N
        jEditorPane1.setEditable(false);
        jEditorPane1.setName("jEditorPane1"); // NOI18N
        jScrollPane1.setViewportView(jEditorPane1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 591, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 529, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    private void updateEditor() {
        final StringBuilder buff = new StringBuilder();
        
        buff.append("<html><body><table>\n");
        buff.append("<tr><td><b>Time:</b></td><td>").append(entry.getTimeStamp()).append("</td></tr>\n");
        buff.append("<tr><td><b>Outcome:</b></td><td>").append(entry.getEventStatus()).append("</td></tr>\n");
        buff.append("<tr><td><b>Event:</b></td><td>").append(entry.getEventType()).append("</td></tr>\n");
        buff.append("<tr><td><b>Module:</b></td><td>").append(entry.getModuleType()).append("</td></tr>\n");
        buff.append("<tr><td><b>Admin Subject:</b></td><td>").append(entry.getAuthToken()).append("</td></tr>\n");
        buff.append("<tr><td><b>Admin Serial Number:</b></td><td>").append(entry.getSearchDetail1()).append("</td></tr>\n");
        buff.append("<tr><td><b>Admin Issuer:</b></td><td>").append(entry.getCustomId()).append("</td></tr>\n");
        buff.append("<tr><td><b>Worker ID:</b></td><td>").append(entry.getSearchDetail2()).append("</td></tr>\n");
        buff.append("<tr><td><b>Node:</b></td><td>").append(entry.getNodeId()).append("</td></tr>\n");
        buff.append("<tr><td><b>Details:</b></td><td>&nbsp;</td></tr>\n")
                .append("<tr><td colspan=\"2\">");
        renderDetails(buff, entry.getAdditionalDetails());
        buff.append("</td></tr>\n");
        
        buff.append("</table></body></html>\n");
        jEditorPane1.setText(buff.toString());
    }

    private void renderDetails(StringBuilder buff, AdditionalDetails details) {
        for (LogEntry.AdditionalDetails.Entry entry : details.getEntry()) {
            buff.append(entry.getKey()).append("=").append(entry.getValue()).append("<br/>\n");
        }
    }
}
