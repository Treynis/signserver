<?xml version="1.0" encoding="ISO-8859-1"?>
<document>
  <properties>
    <title>Installation Guide</title>
  </properties>

  <body>

<section name="Quick start demo guide">
<p>
This is a quick start guide to quickly get you setup with a demo Time Stamp service (TSA according to RFC3161).
It will let you quickly get a feeling how the structure of the SignServer works, so you can move on to more advanced features described in the manual.
</p>
<p>
This quick start guide assumes you are using JBoss and are running everything on localhost.
<ol>
<li>Make sure you are using Sun JDK 1.6.0_04 or later. 04 is needed for using JAX-WS 2.1 that is used for WebServices. 
<br/>It is possible to use 03 or earlier by disabling WebServices. This is described below. 
</li>
<li>Unzip JBoss to a new directory and set the APPSRV_HOME environment variable to point to this location. Ex:
<br/># export APPSRV_HOME=/home/user/jboss-4.2.3
</li>
<li>set the environment variable SIGNSERVER_NODEID
<br/># export SIGNSERVER_NODEID=node1</li>
<li>Copy build configuration sample file:
<br/># cp signserver_build.properties.sample signserver_build.properties
</li>
<li>Configure the signserver web properties:
<br/># vi signserver_build.properties
<br/>- set: j2ee.web-nohttps=true
<br/>You can use Sun Java 1.6.0_03 or earlier if you set the property:
<br/>signserverws.enabled=false
</li>
<li>Build and deploy SignServer to JBoss:
<br/># ant clean; ant deploy</li>
<li>Start JBoss:
<br/># cd $APPSRV_HOME/bin
<br/># ./run.sh
<br/>- verify that startup was ok. Tables have now been created in your database.
</li>
<li>Deploy the Timestamp demo module:
<br/># bin/signserver.sh module add dist-server/tsa.mar demo</li>
<li>Verify the configuration with:
<br/># bin/signserver.sh getconfig tsa
</li>
<li>Finally activate the configuration with:
<br/># bin/signserver.sh reload tsa
</li>
<li>You can check the configuration with:
<br/># bin/signserver.sh getstatus complete all
</li>
<li>Run the test-client to see that everything is up.
<br/># cd dist-client/timestampclient
<br/># java -jar timeStampClient.jar http://localhost:8080/signserver/process?workerName=TSA
<br/>The message "TimeStampRequest Validated" should appear once a second. Also check JBOSS_HOME/server/default/log/server.log that successful messages appear.
</li>
</ol>
If you run into problems at any stage after JBoss has been started, check the JBoss server log in $JBOSS_HOME/server/default/log/server.log for
error messages. Usually errors like database connection problems, or wrong path to the timestamp keystore will be clearly visible.
</p>

<subsection name="PDF signer">
<p>
To install the PDF signer you can issue the following commands (either instead of the TSA or in addition to the TSA).
<ol>
<li>Deploy the PDF signer demo module:
<br/># bin/signserver.sh module add dist-server/pdfsigner.mar demo</li>
<li>Verify the configuration with:
<br/># bin/signserver.sh getconfig pdfsigner
</li>
<li>Finally activate the configuration with:
<br/># bin/signserver.sh reload pdfsigner
</li>
</ol>
You can now, with your web browser, access the url <a href="http://127.0.0.1:8080/signserver/pdfsign.html">http://127.0.0.1:8080/signserver/pdfsign.html</a> to get PDF documents signed. 
</p>
</subsection>

</section>

  <section name="Installation Guides">
    <subsection name="Clustered SignServer 3.0 CentOS 4.4 Installation Guide">
<p>
Installation guide describing step-by-step how to setup a SignServer cluster on CentOS 4.4. Even if the document
is specific for this OS is should be quite easy to adopt it to other environments as well. It 
can be downloaded here either as <a href="docs/SignServer_3_0_Installation_Guide.pdf">PDF</a> or viewed as 
<a href="docs/SignServer_3_0_Installation_Guide.html">HTML</a> 
</p>
</subsection>
<subsection name="Clustered SignServer 2.0 CentOS 4.4 Installation Guide">
<p>
Version 2.0 of the same documentation.<a href="docs/SignServer_2_0_Installation_Guide.pdf">PDF</a> <a href="docs/SignServer_2_0_Installation_Guide.html">HTML</a> 
</p>
</subsection>
</section>

  </body>
</document>
