<?xml version = '1.0' encoding = 'ISO-8859-1'?>
<!DOCTYPE web-app PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN" "http://java.sun.com/dtd/web-app_2_3.dtd">
<web-app>
    <display-name>CA Health Check Configuration</display-name>
    <servlet>
        <servlet-name>SignServerHealthCheckServlet</servlet-name>
        <display-name>SignServerHealthCheckServlet</display-name>
        <servlet-class>org.ejbca.ui.web.pub.HealthCheckServlet</servlet-class>
        <!-- Required parameters -->
        <init-param>
            <param-name>HealthCheckClassPath</param-name>
            <param-value>se.primeKey.signserver.web.SignServerHealthCheck</param-value>
            <description>Class performing the healthcheck. Must implement the IHealthCheck interface.</description>
        </init-param>
        <init-param>
            <param-name>HealthResponseClassPath</param-name>
            <param-value>org.ejbca.ui.web.pub.cluster.TextResponse</param-value>
            <description>Class creating the response to the loadbalancer or monitor software. Must implement the IHealthResponse interface.</description>
        </init-param>
        <!-- Optional parameters -->
        <init-param>
            <param-name>AuthorizedIPs</param-name>
            <param-value>127.0.0.1</param-value>
            <description>Specifies which remote IPs that may call this healthcheck servlet. Use ';' for between multiple IPs. 
                         Comment out this parameter to allow from all IPs.</description>
        </init-param>

        <!-- SignServerHealthCheck specific init parameters -->
        <init-param>
            <param-name>MinimumFreeMemory</param-name>
            <param-value>1</param-value>
            <description>
                Parameter to set the number of Mega Bytes of memory that must be free before removing 
                the node out of the cluster.
            </description>
        </init-param>
        <init-param>
            <param-name>checkDBString</param-name>
            <param-value>Select count(*) from SignerConfigData</param-value>
            <description>
                Parameter indicating the string that should be used to do 
                a minimal check that the database is working.
            </description>
        </init-param>

        <!-- TextResponse specific init parameters -->
        <init-param>
            <param-name>OKMessage</param-name>
            <param-value>ALLOK</param-value>
            <description>
                Text string used to say that every thing is ok with this node.
            </description>
        </init-param>
        <init-param>
            <param-name>SendServerError</param-name>
            <param-value>true</param-value>
            <description>
               Parameter saying if a errorcode 500 should be sent in case of error.
            </description>
        </init-param>
       <!-- 
        <init-param>
            <param-name>CustomErrorMessage</param-name>
            <param-value>NOTOK</param-value>
            <description>
                Uncomment this parameter if you want a static error message instead of 
                one generatedÂ´by the HealthChecker.
            </description>
        </init-param> -->
    </servlet>
    <servlet-mapping>
        <servlet-name>SignServerHealthCheckServlet</servlet-name>
        <url-pattern>/signserverhealth</url-pattern>
    </servlet-mapping>
  <env-entry>
    <env-entry-name>DataSource</env-entry-name>
    <env-entry-value>@datasource.jndi-name-prefix@@datasource.jndi-name@</env-entry-value>
    <env-entry-type>java.lang.String</env-entry-type>
  </env-entry>
  <ejb-local-ref>
    <ejb-ref-name>ejb/SignServerSessionLocal</ejb-ref-name>
    <ejb-ref-type>Session</ejb-ref-type>
    <local-home>org.signserver.ejb.SignSessionLocalHome</local-home>
    <local>org.signserver.ejb.SignSessionLocal</local>
    <ejb-link>SignServerSession</ejb-link>
  </ejb-local-ref>    
</web-app>