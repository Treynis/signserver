<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:tns="http://ws.protocol.core.ejbca.org/" xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://ws.protocol.core.ejbca.org/" version="1.0">

  <xs:element name="AlreadyRevokedException" type="tns:AlreadyRevokedException"/>

  <xs:element name="ApprovalException" type="tns:ApprovalException"/>

  <xs:element name="ApprovalRequestExecutionException" type="tns:ApprovalRequestExecutionException"/>

  <xs:element name="ApprovalRequestExpiredException" type="tns:ApprovalRequestExpiredException"/>

  <xs:element name="AuthorizationDeniedException" type="tns:AuthorizationDeniedException"/>

  <xs:element name="CADoesntExistsException" type="tns:CADoesntExistsException"/>

  <xs:element name="CertificateExpiredException" type="tns:CertificateExpiredException"/>

  <xs:element name="EjbcaException" type="tns:EjbcaException"/>

  <xs:element name="HardTokenDoesntExistsException" type="tns:HardTokenDoesntExistsException"/>

  <xs:element name="HardTokenExistsException" type="tns:HardTokenExistsException"/>

  <xs:element name="IllegalQueryException" type="tns:IllegalQueryException"/>

  <xs:element name="MultipleMatchException" type="tns:MultipleMatchException"/>

  <xs:element name="NotFoundException" type="tns:NotFoundException"/>

  <xs:element name="PublisherException" type="tns:PublisherException"/>

  <xs:element name="SignRequestException" type="tns:SignRequestException"/>

  <xs:element name="UserDataSourceException" type="tns:UserDataSourceException"/>

  <xs:element name="UserDoesntFullfillEndEntityProfile" type="tns:UserDoesntFullfillEndEntityProfile"/>

  <xs:element name="WaitingForApprovalException" type="tns:WaitingForApprovalException"/>

  <xs:element name="caCertResponse" type="tns:caCertResponse"/>

  <xs:element name="caCertResponseResponse" type="tns:caCertResponseResponse"/>

  <xs:element name="caRenewCertRequest" type="tns:caRenewCertRequest"/>

  <xs:element name="caRenewCertRequestResponse" type="tns:caRenewCertRequestResponse"/>

  <xs:element name="certificateRequest" type="tns:certificateRequest"/>

  <xs:element name="certificateRequestResponse" type="tns:certificateRequestResponse"/>

  <xs:element name="checkRevokationStatus" type="tns:checkRevokationStatus"/>

  <xs:element name="checkRevokationStatusResponse" type="tns:checkRevokationStatusResponse"/>

  <xs:element name="createCRL" type="tns:createCRL"/>

  <xs:element name="createCRLResponse" type="tns:createCRLResponse"/>

  <xs:element name="crmfRequest" type="tns:crmfRequest"/>

  <xs:element name="crmfRequestResponse" type="tns:crmfRequestResponse"/>

  <xs:element name="customLog" type="tns:customLog"/>

  <xs:element name="customLogResponse" type="tns:customLogResponse"/>

  <xs:element name="cvcRequest" type="tns:cvcRequest"/>

  <xs:element name="cvcRequestResponse" type="tns:cvcRequestResponse"/>

  <xs:element name="deleteUserDataFromSource" type="tns:deleteUserDataFromSource"/>

  <xs:element name="deleteUserDataFromSourceResponse" type="tns:deleteUserDataFromSourceResponse"/>

  <xs:element name="editUser" type="tns:editUser"/>

  <xs:element name="editUserResponse" type="tns:editUserResponse"/>

  <xs:element name="existsHardToken" type="tns:existsHardToken"/>

  <xs:element name="existsHardTokenResponse" type="tns:existsHardTokenResponse"/>

  <xs:element name="fetchUserData" type="tns:fetchUserData"/>

  <xs:element name="fetchUserDataResponse" type="tns:fetchUserDataResponse"/>

  <xs:element name="findCerts" type="tns:findCerts"/>

  <xs:element name="findCertsResponse" type="tns:findCertsResponse"/>

  <xs:element name="findUser" type="tns:findUser"/>

  <xs:element name="findUserResponse" type="tns:findUserResponse"/>

  <xs:element name="genTokenCertificates" type="tns:genTokenCertificates"/>

  <xs:element name="genTokenCertificatesResponse" type="tns:genTokenCertificatesResponse"/>

  <xs:element name="getAuthorizedEndEntityProfiles" type="tns:getAuthorizedEndEntityProfiles"/>

  <xs:element name="getAuthorizedEndEntityProfilesResponse" type="tns:getAuthorizedEndEntityProfilesResponse"/>

  <xs:element name="getAvailableCAs" type="tns:getAvailableCAs"/>

  <xs:element name="getAvailableCAsInProfile" type="tns:getAvailableCAsInProfile"/>

  <xs:element name="getAvailableCAsInProfileResponse" type="tns:getAvailableCAsInProfileResponse"/>

  <xs:element name="getAvailableCAsResponse" type="tns:getAvailableCAsResponse"/>

  <xs:element name="getAvailableCertificateProfiles" type="tns:getAvailableCertificateProfiles"/>

  <xs:element name="getAvailableCertificateProfilesResponse" type="tns:getAvailableCertificateProfilesResponse"/>

  <xs:element name="getCertificate" type="tns:getCertificate"/>

  <xs:element name="getCertificateResponse" type="tns:getCertificateResponse"/>

  <xs:element name="getEjbcaVersion" type="tns:getEjbcaVersion"/>

  <xs:element name="getEjbcaVersionResponse" type="tns:getEjbcaVersionResponse"/>

  <xs:element name="getHardTokenData" type="tns:getHardTokenData"/>

  <xs:element name="getHardTokenDataResponse" type="tns:getHardTokenDataResponse"/>

  <xs:element name="getHardTokenDatas" type="tns:getHardTokenDatas"/>

  <xs:element name="getHardTokenDatasResponse" type="tns:getHardTokenDatasResponse"/>

  <xs:element name="getLastCertChain" type="tns:getLastCertChain"/>

  <xs:element name="getLastCertChainResponse" type="tns:getLastCertChainResponse"/>

  <xs:element name="getPublisherQueueLength" type="tns:getPublisherQueueLength"/>

  <xs:element name="getPublisherQueueLengthResponse" type="tns:getPublisherQueueLengthResponse"/>

  <xs:element name="isApproved" type="tns:isApproved"/>

  <xs:element name="isApprovedResponse" type="tns:isApprovedResponse"/>

  <xs:element name="isAuthorized" type="tns:isAuthorized"/>

  <xs:element name="isAuthorizedResponse" type="tns:isAuthorizedResponse"/>

  <xs:element name="keyRecoverNewest" type="tns:keyRecoverNewest"/>

  <xs:element name="keyRecoverNewestResponse" type="tns:keyRecoverNewestResponse"/>

  <xs:element name="pkcs10Request" type="tns:pkcs10Request"/>

  <xs:element name="pkcs10RequestResponse" type="tns:pkcs10RequestResponse"/>

  <xs:element name="pkcs12Req" type="tns:pkcs12Req"/>

  <xs:element name="pkcs12ReqResponse" type="tns:pkcs12ReqResponse"/>

  <xs:element name="republishCertificate" type="tns:republishCertificate"/>

  <xs:element name="republishCertificateResponse" type="tns:republishCertificateResponse"/>

  <xs:element name="revokeCert" type="tns:revokeCert"/>

  <xs:element name="revokeCertResponse" type="tns:revokeCertResponse"/>

  <xs:element name="revokeToken" type="tns:revokeToken"/>

  <xs:element name="revokeTokenResponse" type="tns:revokeTokenResponse"/>

  <xs:element name="revokeUser" type="tns:revokeUser"/>

  <xs:element name="revokeUserResponse" type="tns:revokeUserResponse"/>

  <xs:element name="softTokenRequest" type="tns:softTokenRequest"/>

  <xs:element name="softTokenRequestResponse" type="tns:softTokenRequestResponse"/>

  <xs:element name="spkacRequest" type="tns:spkacRequest"/>

  <xs:element name="spkacRequestResponse" type="tns:spkacRequestResponse"/>

  <xs:complexType name="getAuthorizedEndEntityProfiles">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="getAuthorizedEndEntityProfilesResponse">
    <xs:sequence>
      <xs:element nillable="true" maxOccurs="unbounded" name="return" type="tns:nameAndId" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="nameAndId">
    <xs:sequence>
      <xs:element name="id" type="xs:int"/>
      <xs:element name="name" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="AuthorizationDeniedException">
    <xs:sequence>
      <xs:element name="message" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="EjbcaException">
    <xs:sequence>
      <xs:element name="errorCode" type="tns:errorCode" minOccurs="0"/>
      <xs:element name="message" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="errorCode">
    <xs:sequence>
      <xs:element name="internalErrorCode" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getEjbcaVersion">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="getEjbcaVersionResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="caRenewCertRequest">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element maxOccurs="unbounded" name="arg1" type="xs:base64Binary" minOccurs="0"/>
      <xs:element name="arg2" type="xs:boolean"/>
      <xs:element name="arg3" type="xs:boolean"/>
      <xs:element name="arg4" type="xs:boolean"/>
      <xs:element name="arg5" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="caRenewCertRequestResponse">
    <xs:sequence>
      <xs:element nillable="true" name="return" type="xs:base64Binary" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="CADoesntExistsException">
    <xs:sequence>
      <xs:element name="errorCode" type="tns:errorCode" minOccurs="0"/>
      <xs:element name="message" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="ApprovalException">
    <xs:sequence>
      <xs:element name="errorCode" type="tns:errorCode" minOccurs="0"/>
      <xs:element name="message" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="WaitingForApprovalException">
    <xs:sequence>
      <xs:element name="approvalId" type="xs:int"/>
      <xs:element name="message" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="checkRevokationStatus">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="checkRevokationStatusResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:revokeStatus" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="revokeStatus">
    <xs:sequence>
      <xs:element name="certificateSN" type="xs:string" minOccurs="0"/>
      <xs:element name="issuerDN" type="xs:string" minOccurs="0"/>
      <xs:element name="reason" type="xs:int"/>
      <xs:element name="revocationDate" type="xs:dateTime" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="findCerts">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="findCertsResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="return" type="tns:certificate" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="certificate">
    <xs:complexContent>
      <xs:extension base="tns:tokenCertificateResponseWS">
        <xs:sequence>
          <xs:element name="certificateData" type="xs:base64Binary" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="tokenCertificateResponseWS">
    <xs:sequence>
      <xs:element name="certificate" type="tns:certificate" minOccurs="0"/>
      <xs:element name="keyStore" type="tns:keyStore" minOccurs="0"/>
      <xs:element name="type" type="xs:int"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="keyStore">
    <xs:complexContent>
      <xs:extension base="tns:tokenCertificateResponseWS">
        <xs:sequence>
          <xs:element name="keystoreData" type="xs:base64Binary" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="createCRL">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="createCRLResponse">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="ApprovalRequestExpiredException">
    <xs:sequence>
      <xs:element name="message" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="isAuthorized">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="isAuthorizedResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="keyRecoverNewest">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="keyRecoverNewestResponse">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="NotFoundException">
    <xs:sequence>
      <xs:element name="errorCode" type="tns:errorCode" minOccurs="0"/>
      <xs:element name="message" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="customLog">
    <xs:sequence>
      <xs:element name="arg0" type="xs:int"/>
      <xs:element name="arg1" type="xs:string" minOccurs="0"/>
      <xs:element name="arg2" type="xs:string" minOccurs="0"/>
      <xs:element name="arg3" type="xs:string" minOccurs="0"/>
      <xs:element name="arg4" type="tns:certificate" minOccurs="0"/>
      <xs:element name="arg5" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="customLogResponse">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="certificateRequest">
    <xs:sequence>
      <xs:element name="arg0" type="tns:userDataVOWS" minOccurs="0"/>
      <xs:element name="arg1" type="xs:string" minOccurs="0"/>
      <xs:element name="arg2" type="xs:int"/>
      <xs:element name="arg3" type="xs:string" minOccurs="0"/>
      <xs:element name="arg4" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="userDataVOWS">
    <xs:sequence>
      <xs:element name="caName" type="xs:string" minOccurs="0"/>
      <xs:element name="certificateProfileName" type="xs:string" minOccurs="0"/>
      <xs:element name="certificateSerialNumber" type="xs:integer" minOccurs="0"/>
      <xs:element name="clearPwd" type="xs:boolean"/>
      <xs:element name="email" type="xs:string" minOccurs="0"/>
      <xs:element name="endEntityProfileName" type="xs:string" minOccurs="0"/>
      <xs:element name="endTime" type="xs:string" minOccurs="0"/>
      <xs:element nillable="true" maxOccurs="unbounded" name="extendedInformation" type="tns:extendedInformationWS" minOccurs="0"/>
      <xs:element name="hardTokenIssuerName" type="xs:string" minOccurs="0"/>
      <xs:element name="keyRecoverable" type="xs:boolean"/>
      <xs:element name="password" type="xs:string" minOccurs="0"/>
      <xs:element name="sendNotification" type="xs:boolean"/>
      <xs:element name="startTime" type="xs:string" minOccurs="0"/>
      <xs:element name="status" type="xs:int"/>
      <xs:element name="subjectAltName" type="xs:string" minOccurs="0"/>
      <xs:element name="subjectDN" type="xs:string" minOccurs="0"/>
      <xs:element name="tokenType" type="xs:string" minOccurs="0"/>
      <xs:element name="username" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="extendedInformationWS">
    <xs:sequence>
      <xs:element name="name" type="xs:string" minOccurs="0"/>
      <xs:element name="value" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="certificateRequestResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:certificateResponse" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="certificateResponse">
    <xs:sequence>
      <xs:element name="data" type="xs:base64Binary" minOccurs="0"/>
      <xs:element name="responseType" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="UserDoesntFullfillEndEntityProfile">
    <xs:sequence>
      <xs:element name="message" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getHardTokenData">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:boolean"/>
      <xs:element name="arg2" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getHardTokenDataResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:hardTokenDataWS" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="hardTokenDataWS">
    <xs:sequence>
      <xs:element nillable="true" maxOccurs="unbounded" name="certificates" type="tns:certificate" minOccurs="0"/>
      <xs:element nillable="true" maxOccurs="unbounded" name="copies" type="xs:string" minOccurs="0"/>
      <xs:element name="copyOfSN" type="xs:string" minOccurs="0"/>
      <xs:element name="createTime" type="xs:dateTime" minOccurs="0"/>
      <xs:element name="encKeyKeyRecoverable" type="xs:boolean"/>
      <xs:element name="hardTokenSN" type="xs:string" minOccurs="0"/>
      <xs:element name="label" type="xs:string" minOccurs="0"/>
      <xs:element name="modifyTime" type="xs:dateTime" minOccurs="0"/>
      <xs:element nillable="true" maxOccurs="unbounded" name="pinDatas" type="tns:pinDataWS" minOccurs="0"/>
      <xs:element name="tokenType" type="xs:int"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="pinDataWS">
    <xs:sequence>
      <xs:element name="initialPIN" type="xs:string" minOccurs="0"/>
      <xs:element name="PUK" type="xs:string" minOccurs="0"/>
      <xs:element name="type" type="xs:int"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="HardTokenDoesntExistsException">
    <xs:sequence>
      <xs:element name="message" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="ApprovalRequestExecutionException">
    <xs:sequence>
      <xs:element name="message" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getAvailableCertificateProfiles">
    <xs:sequence>
      <xs:element name="arg0" type="xs:int"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getAvailableCertificateProfilesResponse">
    <xs:sequence>
      <xs:element nillable="true" maxOccurs="unbounded" name="return" type="tns:nameAndId" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="cvcRequest">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:string" minOccurs="0"/>
      <xs:element name="arg2" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="cvcRequestResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="return" type="tns:certificate" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="SignRequestException">
    <xs:sequence>
      <xs:element name="errorCode" type="tns:errorCode" minOccurs="0"/>
      <xs:element name="message" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="CertificateExpiredException">
    <xs:sequence>
      <xs:element name="message" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="revokeCert">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:string" minOccurs="0"/>
      <xs:element name="arg2" type="xs:int"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="revokeCertResponse">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="AlreadyRevokedException">
    <xs:sequence>
      <xs:element name="errorCode" type="tns:errorCode" minOccurs="0"/>
      <xs:element name="message" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="findUser">
    <xs:sequence>
      <xs:element name="arg0" type="tns:userMatch" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="userMatch">
    <xs:sequence>
      <xs:element name="matchtype" type="xs:int"/>
      <xs:element name="matchvalue" type="xs:string" minOccurs="0"/>
      <xs:element name="matchwith" type="xs:int"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="findUserResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="return" type="tns:userDataVOWS" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="IllegalQueryException">
    <xs:sequence>
      <xs:element name="message" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="fetchUserData">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="fetchUserDataResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="return" type="tns:userDataSourceVOWS" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="userDataSourceVOWS">
    <xs:sequence>
      <xs:element nillable="true" maxOccurs="unbounded" name="isModifyable" type="xs:int" minOccurs="0"/>
      <xs:element name="userDataVOWS" type="tns:userDataVOWS" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="UserDataSourceException">
    <xs:sequence>
      <xs:element name="errorCode" type="tns:errorCode" minOccurs="0"/>
      <xs:element name="message" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getAvailableCAs">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="getAvailableCAsResponse">
    <xs:sequence>
      <xs:element nillable="true" maxOccurs="unbounded" name="return" type="tns:nameAndId" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="softTokenRequest">
    <xs:sequence>
      <xs:element name="arg0" type="tns:userDataVOWS" minOccurs="0"/>
      <xs:element name="arg1" type="xs:string" minOccurs="0"/>
      <xs:element name="arg2" type="xs:string" minOccurs="0"/>
      <xs:element name="arg3" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="softTokenRequestResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:keyStore" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getPublisherQueueLength">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getPublisherQueueLengthResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:int"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getLastCertChain">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getLastCertChainResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="return" type="tns:certificate" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="editUser">
    <xs:sequence>
      <xs:element name="arg0" type="tns:userDataVOWS" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="editUserResponse">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="spkacRequest">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:string" minOccurs="0"/>
      <xs:element name="arg2" type="xs:string" minOccurs="0"/>
      <xs:element name="arg3" type="xs:string" minOccurs="0"/>
      <xs:element name="arg4" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="spkacRequestResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:certificateResponse" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="crmfRequest">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:string" minOccurs="0"/>
      <xs:element name="arg2" type="xs:string" minOccurs="0"/>
      <xs:element name="arg3" type="xs:string" minOccurs="0"/>
      <xs:element name="arg4" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="crmfRequestResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:certificateResponse" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="pkcs12Req">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:string" minOccurs="0"/>
      <xs:element name="arg2" type="xs:string" minOccurs="0"/>
      <xs:element name="arg3" type="xs:string" minOccurs="0"/>
      <xs:element name="arg4" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="pkcs12ReqResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:keyStore" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="deleteUserDataFromSource">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:string" minOccurs="0"/>
      <xs:element name="arg2" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="deleteUserDataFromSourceResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="MultipleMatchException">
    <xs:sequence>
      <xs:element name="errorCode" type="tns:errorCode" minOccurs="0"/>
      <xs:element name="message" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="caCertResponse">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element nillable="true" name="arg1" type="xs:base64Binary" minOccurs="0"/>
      <xs:element maxOccurs="unbounded" name="arg2" type="xs:base64Binary" minOccurs="0"/>
      <xs:element name="arg3" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="caCertResponseResponse">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="republishCertificate">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="republishCertificateResponse">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="PublisherException">
    <xs:sequence>
      <xs:element name="errorCode" type="tns:errorCode" minOccurs="0"/>
      <xs:element name="message" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getHardTokenDatas">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:boolean"/>
      <xs:element name="arg2" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getHardTokenDatasResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="return" type="tns:hardTokenDataWS" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="existsHardToken">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="existsHardTokenResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="pkcs10Request">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:string" minOccurs="0"/>
      <xs:element name="arg2" type="xs:string" minOccurs="0"/>
      <xs:element name="arg3" type="xs:string" minOccurs="0"/>
      <xs:element name="arg4" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="pkcs10RequestResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:certificateResponse" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="genTokenCertificates">
    <xs:sequence>
      <xs:element name="arg0" type="tns:userDataVOWS" minOccurs="0"/>
      <xs:element maxOccurs="unbounded" name="arg1" type="tns:tokenCertificateRequestWS" minOccurs="0"/>
      <xs:element name="arg2" type="tns:hardTokenDataWS" minOccurs="0"/>
      <xs:element name="arg3" type="xs:boolean"/>
      <xs:element name="arg4" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="tokenCertificateRequestWS">
    <xs:sequence>
      <xs:element name="CAName" type="xs:string" minOccurs="0"/>
      <xs:element name="certificateProfileName" type="xs:string" minOccurs="0"/>
      <xs:element name="keyalg" type="xs:string" minOccurs="0"/>
      <xs:element name="keyspec" type="xs:string" minOccurs="0"/>
      <xs:element name="pkcs10Data" type="xs:base64Binary" minOccurs="0"/>
      <xs:element name="tokenType" type="xs:string" minOccurs="0"/>
      <xs:element name="type" type="xs:int"/>
      <xs:element name="validityIdDays" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="genTokenCertificatesResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="return" type="tns:tokenCertificateResponseWS" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="HardTokenExistsException">
    <xs:sequence>
      <xs:element name="message" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="isApproved">
    <xs:sequence>
      <xs:element name="arg0" type="xs:int"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="isApprovedResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:int"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="revokeUser">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:int"/>
      <xs:element name="arg2" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="revokeUserResponse">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="getAvailableCAsInProfile">
    <xs:sequence>
      <xs:element name="arg0" type="xs:int"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getAvailableCAsInProfileResponse">
    <xs:sequence>
      <xs:element nillable="true" maxOccurs="unbounded" name="return" type="tns:nameAndId" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getCertificate">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getCertificateResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:certificate" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="revokeToken">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:int"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="revokeTokenResponse">
    <xs:sequence/>
  </xs:complexType>
</xs:schema>