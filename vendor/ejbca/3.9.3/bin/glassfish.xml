<project name="glassfish" basedir=".." default="j2ee:deploy">
	<property environment="env"/>

    <property name="appserver.home" value="${env.APPSRV_HOME}"/>
    <property name="glassfish.domain" value="domain1"/>
	<property name="glassfish.server.home.dir" location="${appserver.home}/domains/${glassfish.domain}"/>
    <property name="glassfish.conf.dir" location="${glassfish.server.home.dir}/config"/>
	<property name="glassfish.deploy.dir" location="${glassfish.server.home.dir}/autodeploy"/>
	<property name="keystore.file" value="config/keystore/keystore.jks"/>
	
	<!--
	 Do not configure the servlet container, deploys blindly ears
	 This is ideally passed by the caller and is just here as a reminder
	  -->
	<!--property name="j2ee.web-noconfigure" value="true"/-->
	
	
	<target name="j2ee:check">
        <!--
            we could have a dedicated jboss for ejbca, so give users a chance to override
            otherwise, try to pick the one from environment if it exists
            -->
        <fail message="Please set the property 'appserver.home' for this project" unless="appserver.home"/>
        <available file="${appserver.home}/lib/appserv-rt.jar" property="appserver.home.valid"/>
        <fail message="'appserver.home' (${appserver.home}) does not seem to be a valid Glassfish home directory" unless="appserver.home.valid"/>
        <echo message="Using appserver.home : ${appserver.home}"/>
	</target>



	<!-- Configure the J2EE server with appropriate settings -->
	<target name="j2ee:configure" depends="j2ee:check, j2ee:web-configure">
		
	</target>

	<target name="j2ee:web-configure" depends="j2ee:check" unless="j2ee.web-noconfigure">
        <echo message="Using Glassfish deploy directory ${glassfish.server.home.dir}"/>

		<!-- copy the keystore file to the server -->
		<available file="p12/tomcat.jks" property="keystore.file.present"/>
		<fail message="Missing JKS keystore file in '${basedir}/p12/tomcat.jks'" unless="keystore.file.present"/>
		<condition property="httpsserver.password.present">
			<isset property="httpsserver.password"/> 
		</condition>
		<fail message="Missing JKS password '${httpsserver.password}'" unless="httpsserver.password.present"/>

		<copy file="p12/tomcat.jks" tofile="${glassfish.conf.dir}/${keystore.file}"/>
		<chmod file="${glassfish.conf.dir}/${keystore.file}" perm="600"/>

		
        
	</target>

	<target name="j2ee:deployBase" depends="j2ee:configure">
		<!-- 
		TODO 
		-->
		<echo>You have to deploy manuallt to Glassfish so far</echo>
	</target>

	<target name="j2ee:deploy" if="ocsp-datasource.jndi-name" depends="j2ee:deployBase">
		<!-- deploy base handles ejbca, here we check if we should deploy a datasource to an external ocsp responder -->
		<!-- 
		TODO 
		-->
	</target>

	<target name="j2ee:deployocsp" depends="j2ee:configure">
		<!-- 
		TODO 
		-->
	</target>



	<target name="j2ee:assert-run" description="Check that the server is running">
        <echo message="Checking that the J2EE server is up and running..."/>
        <waitfor maxwait="2" maxwaitunit="second" timeoutproperty="j2ee.notrunning">
            <http url="http://localhost:${httpserver.pubhttp}/"/>
        </waitfor>
        <fail message="Please start J2EE server before running this script" if="j2ee.notrunning"/>	
	</target>


</project>

