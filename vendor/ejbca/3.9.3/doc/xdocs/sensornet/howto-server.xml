<?xml version="1.0"?>
<document>

  <properties>
    <title>Obtaining a Certificate for a server, node, or application</title>
  </properties>

<body>

<section name="Obtaining a certificate for Apache Jakarta Tomcat">
	<p>
	The process is quite simple. Send an e-mail to the SensorNetCA requesting a Tomcat certificate.
	The e-mail should contain: 
	<ul>
<li>The ip name of your server or node, or the name of the application </li>
<li>Your name and e-mail address </li>
<li>Your phone number </li>
<li>Your Organization </li>
<li>Your Organizational Unit</li> 
<li>Your City </li>
<li>Your State </li>
<li>Your Country</li>
</ul>
</p> 
<p>
The key store for your server will be generated by the CA, and is ready to use when you receive it.
It is easiest if you get a .p12 certificate. This will be the default unless you ask for
something else (PEM). If you do NOT want a pkcs#12 certificate, you will have to create a certificate
signing request on your host. Otherwise this is not necessary.
</p>
<p>
When your request is approved, I will mail you a link to download the certificate.
The certificate will be protected using the password in the e-mail. It is best if you change this
to a different (but good) password.
</p>
<p>
It should not be necessary to do so, but if you need to extract the private key from the PKCS12 (.p12)
file, follow these steps: 
<ul>
<li>Convert the P12 to PEM format with the openssl 'pkcs12' utility:</li>
</ul>
</p>
<source>
$ openssl pkcs12 -in TestNode.p12 -out TestNode.pem 
</source>
<p>
This will prompt you for a password for the PEM file which must be used when processing the PEM file with openssl utilities. 
The PEM file contains the private key. Copy everything between and including the lines
</p>
<source>
-----BEGIN RSA PRIVATE KEY-----
-----END RSA PRIVATE KEY-----
</source>
<p>
and store in a file with a .key extension.  
</p>

</section>


</body>
</document>

