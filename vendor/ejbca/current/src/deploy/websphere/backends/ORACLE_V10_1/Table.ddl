CREATE TABLE PUBLISHERDATA (
		ID INT NOT NULL,
		NAME VARCHAR2(250),
		UPDATECOUNTER INT NOT NULL,
		DATA1 VARCHAR2(250)
	)
	PCTFREE 0
	PCTUSED 0
	LOGGING
;

CREATE TABLE CERTREQHISTORYDATA (
		ISSUERDN VARCHAR2(250),
		FINGERPRINT VARCHAR2(250) NOT NULL,
		SERIALNUMBER VARCHAR2(250),
		TIMESTAMP1 NUMBER(19,0) NOT NULL,
		USERDATAVO VARCHAR2(250),
		USERNAME VARCHAR2(250)
	)
	PCTFREE 0
	PCTUSED 0
	LOGGING
;

CREATE TABLE TABLEPROTECTDATA (
		ID VARCHAR2(250) NOT NULL,
		VERSION1 INT NOT NULL,
		HASHVERSION INT NOT NULL,
		PROTECTIONALG VARCHAR2(250),
		HASH1 VARCHAR2(250),
		SIGNATURE VARCHAR2(250),
		TIME1 NUMBER(19,0) NOT NULL,
		DBKEY VARCHAR2(250),
		DBTYPE VARCHAR2(250),
		KEYREF VARCHAR2(250),
		KEYTYPE VARCHAR2(250)
	)
	PCTFREE 0
	PCTUSED 0
	LOGGING
;

CREATE TABLE LOGENTRYDATA (
		ID INT NOT NULL,
		ADMINTYPE INT NOT NULL,
		ADMINDATA VARCHAR2(250),
		CAID INT NOT NULL,
		MODULE1 INT NOT NULL,
		TIME1 NUMBER(19,0) NOT NULL,
		USERNAME VARCHAR2(250),
		CERTIFICATESNR VARCHAR2(250),
		EVENT INT NOT NULL,
		COMMENT1 VARCHAR2(250)
	)
	PCTFREE 0
	PCTUSED 0
	LOGGING
;

CREATE TABLE ENDENTITYPROFILEDATA (
		ID INT NOT NULL,
		PROFILENAME VARCHAR2(250),
		DATA1 LONG RAW
	)
	PCTFREE 0
	PCTUSED 0
	LOGGING
;

CREATE TABLE HARDTOKENISSUERDATA (
		ID INT NOT NULL,
		ALIAS1 VARCHAR2(250),
		ADMINGROUPID INT NOT NULL,
		DATA1 LONG RAW
	)
	PCTFREE 0
	PCTUSED 0
	LOGGING
;

CREATE TABLE LOGCONFIGURATIONDATA (
		ID INT NOT NULL,
		LOGCONFIGURATION LONG RAW,
		LOGENTRYROWNUMBER INT NOT NULL
	)
	PCTFREE 0
	PCTUSED 0
	LOGGING
;

CREATE TABLE HARDTOKENCERTIFICATEMAP (
		CERTIFICATEFINGERPRINT VARCHAR2(250) NOT NULL,
		TOKENSN VARCHAR2(250)
	)
	PCTFREE 0
	PCTUSED 0
	LOGGING
;

CREATE TABLE CADATA (
		CAID INT NOT NULL,
		NAME VARCHAR2(250),
		SUBJECTDN VARCHAR2(250),
		STATUS INT NOT NULL,
		EXPIRETIME NUMBER(19,0) NOT NULL,
		UPDATETIME NUMBER(19,0) NOT NULL,
		DATA1 VARCHAR2(250)
	)
	PCTFREE 0
	PCTUSED 0
	LOGGING
;

CREATE TABLE PROTECTEDLOGDATA (
		PK VARCHAR2(250) NOT NULL,
		ADMINTYPE INT NOT NULL,
		ADMINDATA VARCHAR2(250),
		CAID INT NOT NULL,
		MODULE1 INT NOT NULL,
		EVENTTIME NUMBER(19,0) NOT NULL,
		USERNAME VARCHAR2(250),
		CERTIFICATESERIALNUMBER VARCHAR2(250),
		CERTIFICATEISSUERDN VARCHAR2(250),
		EVENTID INT NOT NULL,
		EVENTCOMMENT VARCHAR2(250),
		NODEGUID INT NOT NULL,
		COUNTER NUMBER(19,0) NOT NULL,
		NODEIP VARCHAR2(250),
		B64LINKEDINEVENTIDENTIFIERS VARCHAR2(250),
		B64LINKEDINEVENTSHASH VARCHAR2(250),
		CURRENTHASHALGORITHM VARCHAR2(250),
		PROTECTIONKEYIDENTIFIER INT NOT NULL,
		PROTECTIONKEYALGORITHM VARCHAR2(250),
		B64PROTECTION VARCHAR2(250)
	)
	PCTFREE 0
	PCTUSED 0
	LOGGING
;

CREATE TABLE USERDATASOURCEDATA (
		ID INT NOT NULL,
		NAME VARCHAR2(250),
		UPDATECOUNTER INT NOT NULL,
		DATA1 VARCHAR2(250)
	)
	PCTFREE 0
	PCTUSED 0
	LOGGING
;

CREATE TABLE HARDTOKENPROPERTYDATA (
		ID VARCHAR2(250) NOT NULL,
		PROPERTY VARCHAR2(250) NOT NULL,
		VALUE1 VARCHAR2(250)
	)
	PCTFREE 0
	PCTUSED 0
	LOGGING
;

CREATE TABLE ADMINGROUPDATA (
		PRIMKEY INT NOT NULL,
		ADMINGROUPNAME VARCHAR2(250),
		CAID INT NOT NULL
	)
	PCTFREE 0
	PCTUSED 0
	LOGGING
;

CREATE TABLE SERVICEDATA (
		ID INT NOT NULL,
		NAME VARCHAR2(250),
		DATA1 VARCHAR2(250)
	)
	PCTFREE 0
	PCTUSED 0
	LOGGING
;

CREATE TABLE PROTECTEDLOGTOKENDATA (
		PK VARCHAR2(250) NOT NULL,
		TOKENIDENTIFIER INT NOT NULL,
		TOKENTYPE INT NOT NULL,
		B64TOKENCERTIFICATE VARCHAR2(250),
		TOKENREFERENCE VARCHAR2(250)
	)
	PCTFREE 0
	PCTUSED 0
	LOGGING
;

CREATE TABLE CRLDATA (
		CRLNUMBER INT NOT NULL,
		DELTACRLINDICATOR INT NOT NULL,
		ISSUERDN VARCHAR2(250),
		FINGERPRINT VARCHAR2(250) NOT NULL,
		CAFINGERPRINT VARCHAR2(250),
		THISUPDATE NUMBER(19,0) NOT NULL,
		NEXTUPDATE NUMBER(19,0) NOT NULL,
		BASE64CRL VARCHAR2(250)
	)
	PCTFREE 0
	PCTUSED 0
	LOGGING
;

CREATE TABLE KEYRECOVERYDATA (
		CERTSN VARCHAR2(250) NOT NULL,
		ISSUERDN VARCHAR2(250) NOT NULL,
		USERNAME VARCHAR2(250),
		MARKEDASRECOVERABLE SMALLINT NOT NULL,
		KEYDATA VARCHAR2(250)
	)
	PCTFREE 0
	PCTUSED 0
	LOGGING
;

CREATE TABLE ADMINPREFERENCESDATA (
		ID VARCHAR2(250) NOT NULL,
		DATA1 LONG RAW
	)
	PCTFREE 0
	PCTUSED 0
	LOGGING
;

CREATE TABLE PROTECTEDLOGEXPORTDATA (
		PK VARCHAR2(250) NOT NULL,
		TIMEOFEXPORT NUMBER(19,0) NOT NULL,
		EXPORTENDTIME NUMBER(19,0) NOT NULL,
		EXPORTSTARTTIME NUMBER(19,0) NOT NULL,
		B64LOGDATAHASH VARCHAR2(250),
		B64PREVIOSEXPORTHASH VARCHAR2(250),
		CURRENTHASHALGORITHM VARCHAR2(250),
		B64SIGNATURECERTIFICATE VARCHAR2(250),
		DELETED SMALLINT NOT NULL,
		B64SIGNATURE VARCHAR2(250)
	)
	PCTFREE 0
	PCTUSED 0
	LOGGING
;

CREATE TABLE ADMINENTITYDATA (
		PRIMKEY INT NOT NULL,
		MATCHWITH INT NOT NULL,
		MATCHTYPE INT NOT NULL,
		MATCHVALUE VARCHAR2(250),
		ADMINENTITIESADMINGROUPDATAIN3 INT
	)
	PCTFREE 0
	PCTUSED 0
	LOGGING
;

CREATE TABLE ACCESSRULESDATA (
		PRIMKEY INT NOT NULL,
		ACCESSRULE VARCHAR2(250),
		RULE1 INT NOT NULL,
		ISRECURSIVE SMALLINT NOT NULL,
		ACCESSRULESADMINGROUPDATAINVE5 INT
	)
	PCTFREE 0
	PCTUSED 0
	LOGGING
;

CREATE TABLE HARDTOKENDATA (
		TOKENSN VARCHAR2(250) NOT NULL,
		USERNAME VARCHAR2(250),
		CTIME NUMBER(19,0) NOT NULL,
		MTIME NUMBER(19,0) NOT NULL,
		TOKENTYPE INT NOT NULL,
		SIGNIFICANTISSUERDN VARCHAR2(250),
		DATA1 LONG RAW
	)
	PCTFREE 0
	PCTUSED 0
	LOGGING
;

CREATE TABLE USERDATA (
		USERNAME VARCHAR2(250) NOT NULL,
		SUBJECTDN VARCHAR2(250),
		CAID INT NOT NULL,
		SUBJECTALTNAME VARCHAR2(250),
		SUBJECTEMAIL VARCHAR2(250),
		STATUS INT NOT NULL,
		TYPE1 INT NOT NULL,
		CLEARPASSWORD VARCHAR2(250),
		PASSWORDHASH VARCHAR2(250),
		TIMECREATED NUMBER(19,0) NOT NULL,
		TIMEMODIFIED NUMBER(19,0) NOT NULL,
		ENDENTITYPROFILEID INT NOT NULL,
		CERTIFICATEPROFILEID INT NOT NULL,
		TOKENTYPE INT NOT NULL,
		HARDTOKENISSUERID INT NOT NULL,
		EXTENDEDINFORMATIONDATA VARCHAR2(250),
		KEYSTOREPASSWORD VARCHAR2(250)
	)
	PCTFREE 0
	PCTUSED 0
	LOGGING
;

CREATE TABLE CERTIFICATEPROFILEDATA (
		ID INT NOT NULL,
		CERTIFICATEPROFILENAME VARCHAR2(250),
		DATA1 LONG RAW
	)
	PCTFREE 0
	PCTUSED 0
	LOGGING
;

CREATE TABLE GLOBALCONFIGURATIONDATA (
		CONFIGURATIONID VARCHAR2(250) NOT NULL,
		DATA1 LONG RAW
	)
	PCTFREE 0
	PCTUSED 0
	LOGGING
;

CREATE TABLE APPROVALDATA (
		ID INT NOT NULL,
		APPROVALID INT NOT NULL,
		APPROVALTYPE INT NOT NULL,
		ENDENTITYPROFILEID INT NOT NULL,
		CAID INT NOT NULL,
		REQADMINCERTISSUERDN VARCHAR2(250),
		REQADMINCERTSN VARCHAR2(250),
		STATUS INT NOT NULL,
		APPROVALDATA VARCHAR2(250),
		REQUESTDATA VARCHAR2(250),
		REQUESTDATE NUMBER(19,0) NOT NULL,
		EXPIREDATE NUMBER(19,0) NOT NULL,
		REMAININGAPPROVALS INT NOT NULL
	)
	PCTFREE 0
	PCTUSED 0
	LOGGING
;

CREATE TABLE AUTHORIZATIONTREEUPDATEDATA (
		PRIMKEY INT NOT NULL,
		AUTHORIZATIONTREEUPDATENUMBER INT NOT NULL
	)
	PCTFREE 0
	PCTUSED 0
	LOGGING
;

CREATE TABLE CERTIFICATEDATA (
		ISSUERDN VARCHAR2(250),
		SUBJECTDN VARCHAR2(250),
		FINGERPRINT VARCHAR2(250) NOT NULL,
		CAFINGERPRINT VARCHAR2(250),
		STATUS INT NOT NULL,
		TYPE1 INT NOT NULL,
		SERIALNUMBER VARCHAR2(250),
		EXPIREDATE NUMBER(19,0) NOT NULL,
		REVOCATIONDATE NUMBER(19,0) NOT NULL,
		REVOCATIONREASON INT NOT NULL,
		BASE64CERT VARCHAR2(250),
		USERNAME VARCHAR2(250)
	)
	PCTFREE 0
	PCTUSED 0
	LOGGING
;

CREATE TABLE HARDTOKENPROFILEDATA (
		ID INT NOT NULL,
		NAME VARCHAR2(250),
		UPDATECOUNTER INT NOT NULL,
		DATA1 VARCHAR2(250)
	)
	PCTFREE 0
	PCTUSED 0
	LOGGING
;

ALTER TABLE PUBLISHERDATA ADD CONSTRAINT PK_PUBLISHERDATA PRIMARY KEY (ID)
;

ALTER TABLE CERTREQHISTORYDATA ADD CONSTRAINT PK_CERTREQHISTORYDATA PRIMARY KEY (FINGERPRINT)
;

ALTER TABLE TABLEPROTECTDATA ADD CONSTRAINT PK_TABLEPROTECTDATA PRIMARY KEY (ID)
;

ALTER TABLE LOGENTRYDATA ADD CONSTRAINT PK_LOGENTRYDATA PRIMARY KEY (ID)
;

ALTER TABLE ENDENTITYPROFILEDATA ADD CONSTRAINT PK_ENDENTITYPROFILEDATA PRIMARY KEY (ID)
;

ALTER TABLE HARDTOKENISSUERDATA ADD CONSTRAINT PK_HARDTOKENISSUERDATA PRIMARY KEY (ID)
;

ALTER TABLE LOGCONFIGURATIONDATA ADD CONSTRAINT PK_LOGCONFIGURATIONDATA PRIMARY KEY (ID)
;

ALTER TABLE HARDTOKENCERTIFICATEMAP ADD CONSTRAINT PK_HARDTOKENCERTIFICATEMAP PRIMARY KEY (CERTIFICATEFINGERPRINT)
;

ALTER TABLE CADATA ADD CONSTRAINT PK_CADATA PRIMARY KEY (CAID)
;

ALTER TABLE PROTECTEDLOGDATA ADD CONSTRAINT PK_PROTECTEDLOGDATA PRIMARY KEY (PK)
;

ALTER TABLE USERDATASOURCEDATA ADD CONSTRAINT PK_USERDATASOURCEDATA PRIMARY KEY (ID)
;

ALTER TABLE HARDTOKENPROPERTYDATA ADD CONSTRAINT PK_HARDTOKENPROPERTYDATA PRIMARY KEY (ID, PROPERTY)
;

ALTER TABLE ADMINGROUPDATA ADD CONSTRAINT PK_ADMINGROUPDATA PRIMARY KEY (PRIMKEY)
;

ALTER TABLE SERVICEDATA ADD CONSTRAINT PK_SERVICEDATA PRIMARY KEY (ID)
;

ALTER TABLE PROTECTEDLOGTOKENDATA ADD CONSTRAINT PK_PROTECTEDLOGTOKENDATA PRIMARY KEY (PK)
;

ALTER TABLE CRLDATA ADD CONSTRAINT PK_CRLDATA PRIMARY KEY (FINGERPRINT)
;

ALTER TABLE KEYRECOVERYDATA ADD CONSTRAINT PK_KEYRECOVERYDATA PRIMARY KEY (CERTSN, ISSUERDN)
;

ALTER TABLE ADMINPREFERENCESDATA ADD CONSTRAINT PK_ADMINPREFERENCESDATA PRIMARY KEY (ID)
;

ALTER TABLE PROTECTEDLOGEXPORTDATA ADD CONSTRAINT PK_PROTECTEDLOGEXPORTDATA PRIMARY KEY (PK)
;

ALTER TABLE ADMINENTITYDATA ADD CONSTRAINT PK_ADMINENTITYDATA PRIMARY KEY (PRIMKEY)
;

ALTER TABLE ACCESSRULESDATA ADD CONSTRAINT PK_ACCESSRULESDATA PRIMARY KEY (PRIMKEY)
;

ALTER TABLE HARDTOKENDATA ADD CONSTRAINT PK_HARDTOKENDATA PRIMARY KEY (TOKENSN)
;

ALTER TABLE USERDATA ADD CONSTRAINT PK_USERDATA PRIMARY KEY (USERNAME)
;

ALTER TABLE CERTIFICATEPROFILEDATA ADD CONSTRAINT PK_CERTIFICATEPROFILEDATA PRIMARY KEY (ID)
;

ALTER TABLE GLOBALCONFIGURATIONDATA ADD CONSTRAINT PK_GLOBALCONFIGURATIONDATA PRIMARY KEY (CONFIGURATIONID)
;

ALTER TABLE APPROVALDATA ADD CONSTRAINT PK_APPROVALDATA PRIMARY KEY (ID)
;

ALTER TABLE AUTHORIZATIONTREEUPDATEDATA ADD CONSTRAINT PK_AUTHORIZATIONTREEUPDATEDATA PRIMARY KEY (PRIMKEY)
;

ALTER TABLE CERTIFICATEDATA ADD CONSTRAINT PK_CERTIFICATEDATA PRIMARY KEY (FINGERPRINT)
;

ALTER TABLE HARDTOKENPROFILEDATA ADD CONSTRAINT PK_HARDTOKENPROFILEDATA PRIMARY KEY (ID)
;

