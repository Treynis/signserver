
# This file contains properties for configuring CESeCore's backup routines.
#
# Note that you have to define at least database.name, database.username and database.password, 
# database.host and database.port in database.properties as well.

# This value defines a directory to place backups in.
# Default: System Temp Directory
#backup.directory=

# The prefix value for backup files, which will be appended with a timestamp.
# Default: cesecore_backup_
#backup.prefix=cesecore_backup_

# Path to the home directory of the database. Since this is only used for backup, it's stored here instead of in database.properties.
# Do not end with a /. On Windows use / instead of \.
# Example 1: /usr
# Example 2: /Program Files/MySQL/MySQL Server 5.1
# Default: null
backup.database.home=

# The command to dump your database. Important is that it must be set to not prompt for password, 
# the restore util won't handle required input. The password must be sent along either in the command line or as an environment
# variable (see below). 
# 
# MySQL: ${backup.database.home}/bin/mysqldump --add-drop-table -h${database.host} --port=${database.port} -u${database.username} -p${database.password} ${database.name} -r
# PostgreSQL: ${backup.database.home}/bin/pg_dump -Fc -w -h${database.host} -U${database.username} -b ${database.name} -f
backup.dbdump.command=

# The command to restore your database from a previous dump. Important is that it must be set to not prompt for password, 
# the restore util won't handle required input. The password must be sent along either in the command line or as an environment
# variable (see below). The restore command can't run using the standard database user since all tables need to be dropped before
# they can be restored, which the standard user in a secure installation should not be capable of. 
#
# Note: The :sourceFile keyword will be replaced by the required file at run time. 
# Note: The :databaseSuperUserId keyword will be replaced by the admin user for the database at run time
# Note: The :databaseSuperUserPassword keyword will be replaced by the admin user password for the database at run time.
#
# MySQL: ${backup.database.home}/bin/mysql -h${database.host} --port=${database.port} -u${backup.keyword.databasesuperuserid} -p${backup.keyword.databasesuperuserpassword} ${database.name} -e "source ${backup.keyword.sourcefile}"
# PostgreSQL: ${backup.database.home}/bin/pg_restore -c -w -h${database.host} -U${backup.keyword.databasesuperuserid} -d${database.name} ${backup.keyword.sourcefile}
backup.dbrestorecommand=

# Set this variable in case your database vendor (like PostgreSQL) requires the database password to be set as an environment variable 
# Default: null
# PostgreSQL: backup.dbdump.password.env=PGPASSWORD
#backup.dbdump.password.env=

# Keywords
# These keywords (used above) will all be replaced during run time, and mostly exist for compatibility issues. 
# They are defined here so that they don't need to be defined again in code. 
backup.keyword.sourcefile=:sourceFile
backup.keyword.databasesuperuserid=:databaseSuperUserId
backup.keyword.databasesuperuserpassword=:databaseSuperUserPassword
