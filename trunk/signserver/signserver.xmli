<?xml version="1.0"?>
<project name="signserver_specific" basedir=".">
	   
	   <import file="./build.xml"/>
	
	   <property name="java.trustpassword" value="changeit" />
	   <property name="java.trustcert" value="p12/rootcert.cer" />
	   <property name="httpsserver.password" value="serverpwd" />


	   <property name="ejbdd.src" value="${src}/deploy/ejb" />

	   <property name="eardd.src" value="${src}/deploy/ear" />
	   <property name="caear" value="${server.dist.dir}/${app.name}.ear" />
	
		
	   <property name="timeStampClientBuild" location="${bin}/timeStampClient"/>
	   <property name="timeStampClientJar" location="${client.dist.dir}/timeStampClient.jar"/>
	   <property name="server.primeCard.dist" location="${primeCard.home}/dist-${server.java.target}-${ejbca.target}"/>
	   <property name="server.primeCard.catoken" location="${primeCard.home}/caTokenClasses-${server.java.target}-${ejbca.target}"/>
	   <property name="client.primeCard.dist" location="${primeCard.home}/dist-${client.java.target}-${ejbca.target}"/>

	   <property name="web.src" value="${src}/web/pub" />
	   <property name="webwar" value="${server.dist.dir}/web.war" />
		
	   <property name="healthcheck.src" value="${src}/web/healthcheck" />
	   <property name="healthcheckwar" value="${server.dist.dir}/healthcheck.war" />
	
	   <path id="signserver.compile.classpath">
	        <path refid="ext.classpath" />
	        <fileset dir="lib" includes="*.jar" />
	        <fileset dir="lib/itext" includes="*.jar" />
	    	<fileset dir="lib/${server.java.target}" includes="*.jar" />    	
	        <path refid="j2ee.classpath" />
	    </path>

	    <path id="server.compile.classpath">
	        <path refid="signserver.compile.classpath" />
	    </path>
		
		
	    <path id="client.compile.classpath">
	        <fileset dir="${client.primeCard.dist}" includes="*.jar" />
	        <path refid="signserver.compile.classpath" />
	    </path>

	    <path id="j2ee.classpath">
	        <fileset dir="${jboss.home}/lib">
	            <include name="jboss-system.jar" />
	        </fileset>
	        <fileset dir="${jboss.home}/client">
	            <include name="jbossall-client.jar" />
	            <include name="jboss-j2ee.jar" />
	            <include name="ejb3-persistence.jar" />
	            <include name="jboss-ejb3x.jar" />
	        </fileset>
	    </path>


	
      <path id="signserver.test.compile.classpath">
    	<fileset dir="lib/ext" includes="mysql-connector-java-3.1.10-bin.jar" />
        <path refid="server.compile.classpath" />
        <path location="${build}" />
        <path refid="j2ee.classpath" />
      </path>
	
	   <!-- those are the default values used within JBoss for easy startup -->
	    <property name="web.contentencoding" value="ISO-8859-1" />
	    <property name="datasource.jndi-name" value="SignServerDS" />
	    <property name="datasource.jndi-name-prefix" value="java:/" />
	    <property name="database.name" value="hsqldb" />
	    <property name="datasource.mapping" value="Hypersonic SQL" />
	    <property name="database.url" value="jdbc:hsqldb:$${jboss.server.data.dir}$${/}hypersonic$${/}localDB" />
	    <property name="database.driver" value="org.hsqldb.jdbcDriver" />
	    <property name="database.username" value="sa" />
	    <property name="database.password" value="" />
	    <property name="httpserver.pubhttp" value="8080" />
	    <property name="httpserver.pubhttps" value="8442" />
	    <property name="httpserver.privhttps" value="8443" />
	    <property name="httpsserver.password" value="serverpwd" />
	    <property name="httpsserver.keystore" value="p12/tomcat.jks" />	
	    <property name="web.contentencoding" value="ISO-8859-1" />
	    <property name="deploy.ssh.user" value="jboss" />
	    <property name="deploy.ssh.keyfilepath" value="/home/jboss/.ssh/id_rsa" />
	    <property name="deploy.ssh.knownhostsfile" value="/home/jboss/.ssh/known_hosts" />
	    <property name="deploy.ssh.appsrvhome" value="/home/jboss/jboss" />
	    <property name="deploy.tomcat.version" value="tomcat55" />
	
    <target name="signserver.init" unless="buildMailSigner">
    	<antcall target="j2ee:check"/>
        <echo>
---------- CONFIGURATION PROPERTIES ----------
build.mode             = ${build.mode}
jboss.home             = ${jboss.home}
web.contentencoding    = ${web.contentencoding}
datasource.jndi-name   = ${datasource.jndi-name}
datasource.jndi-name-prefix = ${datasource.jndi-name-prefix}
database.name          = ${database.name}
datasource.mapping     = ${datasource.mapping}
database.url           = ${database.url}
database.driver        = ${database.driver}
database.username      = ${database.username}
database.password      = ${database.password}
 
      </echo>
    </target>
	
	    <!-- =================================================================== -->
	    <!-- Clean SignServer related ALL                                                           -->
	    <!-- =================================================================== -->
	    <target name="signserver:clean" unless="buildMailSigner">
	    </target>
	
        <!-- =================================================================== -->
        <!-- Build SignServer                                                        -->
        <!-- =================================================================== -->	
        <target name="signserver" depends="signserver.ear"  unless="buildMailSigner">
	    </target>
	
	
	
	   <!-- =================================================================== -->
	    <!-- Compile java sources                                                -->
	    <!-- =================================================================== -->
	    <target name="signserver:compile" unless="buildMailSigner">	    	
	        <javac destdir="${build}" debug="on" includeantruntime="no" encoding="iso8859-1" target="${server.java.target}" source="${server.java.target}">
	            <classpath refid="server.compile.classpath" />
	            <src path="${src.java}" />
	        	<exclude name="org/signserver/rmiClient/**"/> 
	        	<exclude name="org/signserver/mailsigner/**"/>
	        	<exclude name="org/signserver/rmi/**"/> 
	        	<exclude name="org/signserver/appserver/**"/> 
	        	<exclude name="org/signserver/server/signtokens/PrimeCardHSMSignToken.*"/>
	        	<exclude name="org/signserver/cli/GenerateCertReqCommand.*"/>
	        	<exclude name="org/signserver/server/mailets/**"/>
	        </javac>
	        <copy todir="${build}">
	            <fileset dir="src/java">
	                <include name="profilemappings.properties"/>
	            </fileset>	   
		    </copy>
	    </target>
	
	   <!-- =================================================================== -->
	    <!-- Build signserver ejb part                                           -->
	    <!-- =================================================================== -->
	    <target name="signserver-ejb.jar" depends="timeStampTestClient, signserver:compile" description="Creates master ejb.jar" unless="buildMailSigner">
			<mkdir dir="${src.external}"/>
	        <jar jarfile="${server.dist.dir}/signserver-ejb.jar">
	            <manifest>
	                <!-- todo: autogenerate this from a fileset -->
	                <attribute name="Class-Path" value="${jar.extclasspath}" />
	            </manifest>
	        	<metainf dir="${src}/appserver/jboss">
	        			<include name="persistence.xml"/>
	        	</metainf>
	        	<metainf dir="${src}/deploy/ejb/persistence-mappings/${database.name}">
	    	            <include name="entity-mappings.xml"/>
	    	    </metainf>
	        	
	        	<fileset dir="." includes="signserver_server.properties"/>
	        	<fileset dir="src/java" includes="profilemappings.properties"/>
	            <fileset dir="${build}">
	        	  <include name="org/signserver/ejb/**" />
	          	  <include name="org/signserver/common/**" />
	          	  <include name="org/signserver/server/**" />
	              <include name="org/signserver/web/**" />
		          <include name="org/signserver/mailsigner/**" />
	        	</fileset>
	            <fileset dir="${src.external}"/>
	        </jar>
	    </target>
	       
	    
	    <!-- =================================================================== -->
	    <!-- Build external web part                                                                                                                             -->
	    <!-- =================================================================== -->
	    <target if="ext.web.src" name="ext.web.war" depends="signserver:compile" unless="buildMailSigner">
	        <war destfile="${webwar}" webxml="${ext.web.src}/WEB-INF/web.xml">
	            <fileset dir="${ext.web.src}" excludes="WEB-INF/web.xml" />
	        </war>
	    </target>
		
	    <!-- =================================================================== -->
	    <!-- Build web part                                                                                                                             -->
	    <!-- =================================================================== -->
	    <target unless="ext.web.src" name="web.war" depends="ext.web.war">
	        <war destfile="${webwar}" webxml="${web.src}/WEB-INF/web.xml">
	            <fileset dir="${web.src}" excludes="WEB-INF/web.xml" />
	        </war>
	    </target>
		
	    <!-- =================================================================== -->
	    <!-- Build health check part                                                                                                                             -->
	    <!-- =================================================================== -->
	    <target name="healthcheck.war" depends="signserver:compile" unless="buildMailSigner">
	        <war destfile="${healthcheckwar}" webxml="${healthcheck.src}/WEB-INF/web.xml">
	            <fileset dir="${healthcheck.src}" excludes="WEB-INF/web.xml" />

	        </war>
	    </target>
		
		
	    <!-- =================================================================== -->
	    <!-- Build signserver.ear                                                        -->
	    <!-- =================================================================== -->
	    <target name="signserver.ear" depends="init, preprocess, signserver-ejb.jar, web.war, healthcheck.war" unless="buildMailSigner" >
	        <ear destfile="${caear}" appxml="${eardd.src}/META-INF/applicationnormi.xml">         		
	            <fileset dir="${eardd.src}">
	                <exclude name="META-INF/applicationwithrmi.xml" />
	            	<exclude name="META-INF/applicationnormi.xml" />
	            </fileset>
	            <fileset dir=".">
	                <include name="${lib}/log4j.jar" />
	                <include name="${lib}/ejbca-util.jar" />   
	                <include name="${lib}/ldap.jar" />
	            	<include name="${lib}/commons-lang-2.0.jar" />
	            	<include name="${lib}/itext/*.jar" />
	            </fileset>
	            <fileset dir="${server.dist.dir}">
	                <include name="*-ejb.jar" />
	                <include name="*.war" />
	            </fileset> 
			</ear>
	    </target>
		
    <!-- ======================================================================= -->
    <!-- Deploy Sign Server ear to JBoss                                               -->
    <!-- ======================================================================= -->
    <target name="deploy" depends="signserver.ear" unless="buildMailSigner">
        <antcall target="j2ee:deploy" />
    </target>
	
    <target name="install"  description="Install">
        <echo message="Removing old cacerts and add root cert to be trusted  ..."/>
        <echo message="Make sure you have write access to JAVA_HOME/jre/lib/security/cacerts  ..."/>
        <delete file="${java.home}/lib/security/cacerts"/>
        <keytool arg="-v -alias SIGNSERVER -import -file '${java.trustcert}' -keystore '${java.home}/lib/security/cacerts' -storepass ${java.trustpassword} -noprompt"/>
    </target>
	
    <target name="test:signserver:compile" description="compile JUnit testcases" unless="buildMailSigner">
        <mkdir dir="${test.dir}" />
        <javac srcdir="${test.src.dir}" destdir="${test.dir}" debug="on" includeantruntime="no" encoding="iso8859-1"  target="${server.java.target}" source="${server.java.target}">
            <classpath refid="signserver.test.compile.classpath" />
        	<exclude name="org/signserver/mailsigner/**"/>
        </javac>
        <!-- jndi.properties needs to be in the classpath -->
        <copy file="${src.java}/jndi.properties" todir="${test.dir}" />
    </target>
	
    <target name="test:signserver:run" depends="test:signserver:compile" description="run JUnit testcases" unless="buildMailSigner">
        <fail message="Please set the environment variable 'SIGNSERVER_HOME' before running the junit tests." unless="env.SIGNSERVER_HOME"/>
        <delete dir="${test.dir}/reports" />
        <mkdir dir="${test.dir}/reports/html" />
        <junit printsummary="yes" haltonfailure="no">
            <classpath>
                <path refid="signserver.test.compile.classpath" />
                <path location="${test.dir}" />
            </classpath>
            <formatter type="xml" />
            <batchtest fork="yes" todir="${test.dir}/reports">
                <fileset dir="${test.dir}">                  
                    <include name="**/ejb/Test*" /> 
                    <include name="**/server/Test*" /> 
                	<include name="**/cli/TestSignServer*" />
                    <exclude name="**/*Continously*" />
                    <exclude name="**/TestRunner*" />
                	<exclude name="**/db/*" />
                	<exclude name="**/mailsigner/**" />
                	<exclude name="**/cli/TestMail**" />
                </fileset>
            </batchtest>
        </junit>

        <junitreport todir="${test.dir}/reports">
            <fileset dir="${test.dir}/reports">
                <include name="TEST-*.xml" />
            </fileset>
            <report format="frames" todir="${test.dir}/reports/html" />
        </junitreport> 
    </target>
	
	 <!--                                                   -->
	 <!-- Target Used to test the TimeStamp communication     -->
	 <!--                                                   -->
	  <target name="timeStampTestClient" depends="signserver:compile" unless="buildMailSigner">
	    <mkdir dir="${timeStampClientBuild}"/>
	    <javac srcdir="${src.java}" destdir="${timeStampClientBuild}" debug="on" target="${client.java.target}" source="${client.java.target}">
		   <include name="org/signserver/client/TimeStampClient.java"/> 	       
		   <classpath refid="signserver.compile.classpath"/> 
	    </javac>

	    <copy todir="${client.dist.dir}" >
	      <fileset dir="${lib}/${client.java.target}">
	        <include name="bcprov-jdk.jar"/>
	        <include name="bctsp-jdk.jar"/>
	      	<include name="bcmail-jdk.jar"/>
	      </fileset>
	    </copy>
       <copy todir="${client.dist.dir}/lib" >
         <fileset dir="${lib}/ext">
           <include name="commons-cli-1.0.jar"/>
         </fileset>
       </copy>
	    <jar destfile="${timeStampClientJar}" basedir="${timeStampClientBuild}">
	      <manifest>
	        <attribute name="Class-Path" value="bctsp-jdk.jar bcprov-jdk.jar bcmail-jdk.jar lib/commons-cli-1.0.jar"/>
	        <attribute name="Main-Class" value="org.signserver.client.TimeStampClient"/>
	      </manifest>
	    </jar>
	  </target>


</project>	