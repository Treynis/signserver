<?xml version="1.0" encoding="UTF-8"?>
<persistence version="1.0" xmlns="http://java.sun.com/xml/ns/persistence" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd">

  <!--COMMENT-REPLACEMENT(persistenceheader)-->
  
  <persistence-unit name="SignServerJPA" transaction-type="JTA">
    <provider>org.hibernate.ejb.HibernatePersistence</provider>
    <jta-data-source>${datasource.jndi-name-prefix}${datasource.jndi-name}</jta-data-source>
    <mapping-file>META-INF/orm-${database.name}.xml</mapping-file>
    <class>org.signserver.server.config.entities.GlobalConfigurationDataBean</class>
    <class>org.signserver.server.config.entities.WorkerConfigDataBean</class>
    <class>org.signserver.server.entities.KeyUsageCounter</class>
    <class>org.signserver.server.archive.olddbarchiver.entities.ArchiveDataBean</class>
    <class>org.signserver.groupkeyservice.entities.EncKeyDataBean</class>
    <class>org.signserver.groupkeyservice.entities.GroupKeyDataBean</class>
    <properties>
      <property name="hibernate.dialect" value="${hibernate.dialect}"/>
      <property name="hibernate.hbm2ddl.auto" value="update"/>
    </properties>
  </persistence-unit>
  
  <persistence-unit name="cesecore" transaction-type="JTA">
        <provider>org.hibernate.ejb.HibernatePersistence</provider>
        <jta-data-source>${datasource.jndi-name-prefix}${datasource.jndi-name}</jta-data-source>        
        <mapping-file>META-INF/cesecore-orm-${database.name}.xml</mapping-file>
        <class>org.cesecore.audit.impl.integrityprotected.AuditRecordData</class>
        <properties>
            <property name="hibernate.dialect" value="${hibernate.dialect}"/>
            <!--
            	We don't want Hibernate to go and change the database schema on it's own initiative, since we still use
            	manual upgrade scripts. But we do want to create a database schema if this is a fresh install.
            	It would be nice if we could drop manual schema changes and just let Hibernate update the schema...
            -->
            <property name="hibernate.hbm2ddl.auto" value="update"/> <!-- validate | update | create | create-drop -->
            <property name="hibernate.query.jpaql_strict_compliance" value="true"/>
            <!-- Enabled when bundling Hibernate on Weblogic .. ${persistence.enable-weblogic-jta-lookup1}
            <property name="hibernate.transaction.manager_lookup_class" value="org.hibernate.transaction.WeblogicTransactionManagerLookup"/>
            ${persistence.enable-websphere-jta-lookup2} -->
            <!-- Enabled when bundling Hibernate on Websphere .. ${persistence.enable-weblogic-jta-lookup1}
            <property name="hibernate.transaction.manager_lookup_class" value="org.hibernate.transaction.WebSphereTransactionManagerLookup"/>
            ${persistence.enable-websphere-jta-lookup2} -->


            <property name="hibernate.show_sql" value="false"/> 
            
            <property name="hibernate.cache.use_second_level_cache" value="true"/>
            <property name="hibernate.cache.use_query_cache" value="true" />
            <property name="hibernate.cache.region_prefix" value=""/>
            <property name="hibernate.cache.region.factory_class" value="net.sf.ehcache.hibernate.EhCacheRegionFactory" />
            <property name="hibernate.cache.use_structured_entries" value="true" /> 
            
        </properties>
    </persistence-unit>

  <!--COMMENT-REPLACEMENT(persistencefooter)-->

</persistence>

