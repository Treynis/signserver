<?xml version="1.0" encoding="UTF-8"?>
<!-- ======================================================================= -->
<!--                                                                         -->
<!--  SignServer: The OpenSource Automated Signing Server                    -->
<!--                                                                         -->
<!--  This software is free software; you can redistribute it and/or         -->
<!--  modify it under the terms of the GNU Lesser General Public             -->
<!--  License as published by the Free Software Foundation; either           -->
<!--  version 2.1 of the License, or any later version.                      -->
<!--                                                                         -->
<!--  See terms of license at gnu.org.                                       -->
<!--                                                                         -->
<!-- ======================================================================= -->
<!-- Version: $Id$ -->
<project name="compile" default="build" basedir=".">

    <import file="../build.xml"/>
    <import file="modules.xml"/>


    <!-- =================================================================== -->
    <!-- Main targets                                                        -->
    <!-- =================================================================== -->
    
    <target name="init" depends="display-build-properties">
        <antcall target="j2ee:check"/>
        <!-- Create the time stamp -->
        <tstamp/>
        <mkdir dir="${mods-available}"/>
    </target>
    
    <target name="display-build-properties">
        <echo>
-------------- BUILD PROPERTIES --------------
appserver.type                      = ${appserver.type}
appserver.home                      = ${appserver.home}
signserverws.enabled                = ${signserverws.enabled}
genericws.enabled                   = ${genericws.enabled}
validationws.enabled                = ${validationws.enabled}
adminws.enabled                     = ${adminws.enabled}
webdoc.enabled                      = ${webdoc.enabled}
timestampclient.enabled             = ${timestampclient.enabled}
validationclient.enabled            = ${validationclient.enabled}
pdfperformancetest.enabled          = ${pdfperformancetest.enabled}
signingandvalidationapi.enabled     = ${signingandvalidationapi.enabled}
admingui.enabled                    = ${admingui.enabled}
clientcli.enabled                   = ${clientcli.enabled}
includemodulesinbuild               = ${includemodulesinbuild}
module.pdfsigner.enabled            = ${module.pdfsigner.enabled}
module.renewal.enabled              = ${module.renewal.enabled}
module.xmlsigner.enabled            = ${module.xmlsigner.enabled}
module.xmlvalidator.enabled         = ${module.xmlvalidator.enabled}
module.cmssigner.enabled            = ${module.cmssigner.enabled}
module.odfsigner.enabled            = ${module.odfsigner.enabled}
module.tsa.enabled                  = ${module.tsa.enabled}
module.mrtdsodsigner.enabled        = ${module.mrtdsodsigner.enabled}
module.mrtdsigner.enabled           = ${module.mrtdsigner.enabled}
        </echo>
    </target>

    <target name="build" description="Build everything enabled" depends="
        display-build-properties,
        init,
        -build-buildtools,
        modules">
            <antcall target="showtime"/>
    </target>


    <target name="clean-build">
        <echo>Cleaning built files</echo>
        <delete dir="../lib/" failonerror="true">
            <include name="*.*ar"/>
        </delete>
    	<delete dir="${pkg.dist.dir}" />
        <delete dir="${apidoc}" />
        <delete dir="${tmp}"/>	
        <delete dir="${debian.pkgdist.destdir}"/>
        <delete dir="${mods-available}"/>
        <delete dir="${test.dir}" />
        <delete dir="${signingAndValidationBuild}" />
        <delete dir="${timeStampClientBuild}" />
        <delete file="../velocity.log"/>

        <!-- Clean all modules -->
        <echo>Cleaning sub projects</echo>
        <subant target="-do-clean-module" failonerror="false">
            <fileset dir="${modules}" includes="SignServer-*/build.xml"/>
         </subant>
    </target>


    <!-- =================================================================== -->
    <!-- Sub build targets                                                   -->
    <!-- =================================================================== -->

    <target name="-build-buildtools">
        <ant inheritall="false" target="jar" antfile="modules/SignServer-BuildTools/build.xml"/>
     </target>

    <target name="doc" description="Build SignServer web site and docs">
        <ant antfile="modules/SignServer-Doc/build.xml" target="build"
            inheritall="false"/>
    </target>

    <target name="javadoc" depends="build"
        description="Build JavaDoc for SignServer">
        <!-- Load the classpath variable -->
        <property file="lib/nblibraries.properties"/>
        <mkdir dir="${apidoc}" />
        <javadoc failonerror="true" useexternalfile="true" packagenames="org.signserver.*" maxmemory="256m" destdir="${apidoc}"
        	extdirs="${lib}:${lib}/ext:${ant.home}/lib:${lib}/ext/ejb:${lib}/ext/james:${lib}/asm:${lib}/${server.java.target}/:${lib}/${client.java.target}/:${lib}/module/tsa/${server.java.target}:${lib}/module/pdfsigner/itext:${lib}/reports:${lib}/quartz:${lib}/module/odfsigner/odfdom.jar" author="true" version="true" use="true" windowtitle="${app.name.cap} API" bottom="Copyright &#169; 2005-2011 PrimeKey Solutions AB." encoding="utf-8" charset="utf-8">

                <!-- Include all java files in the modules folder but excluding the tests -->
                <fileset dir="modules" includes="**/*.java" excludes="*/test/**/*.java"/>
                
                <!-- When possible: this should be moved out to a properties file instead -->
                <classpath>
                    <fileset dir="lib/ext" includes="*.jar" />
                    <fileset dir="lib" includes="*.jar"/>
                    <fileset dir="lib/ext/ext" includes="*.jar" />
                    <fileset dir="lib/ext/ext/ejb" includes="*.jar" />
                    <fileset dir="lib/ext/quartz" includes="*.jar" />
                    <fileset dir="lib/ext/1.6" includes="*.jar" />
                    <fileset dir="lib/ext/module/tsa/${client.java.target}" includes="*.jar" />
                    <fileset dir="lib/ext/module/pdfsigner/itext" includes="*.jar"/>
                    <fileset dir="lib/ext/module/odfsigner" includes="*.jar"/>
                    <fileset dir="lib/ext/module/ooxmlsigner" includes="*.jar"/>
                    <fileset dir="lib/ext/asm" includes="*.jar" />
                    <fileset dir="lib/ext/hibernate" includes="*.jar"/>
                    <fileset dir="${ant.home}/lib" includes="ant.jar" />
                    <path path="${libs.JBoss-Java-EE-Library.classpath}" />                    
                </classpath>
                <classpath path="lib/ext/swing-app-framework/appframework-1.0.3.jar:lib/ext/swing-app-framework/swing-worker-1.1.jar:lib/ext/beans-binding/beansbinding-1.2.1.jar"/>
        </javadoc>
        <echo message="Local documentation is now available in file://${apidoc}/index.html"/>
    </target>


    <!-- =================================================================== -->
    <!-- Test part                                                           -->
    <!-- =================================================================== -->

    <!-- Run tests -->
    <target name="test:run" depends="test:signserver:run" 
        description="Run the default JUnit testcases"/>

    <!-- Run all tests -->
    <target name="test:runall" depends="test:signserver:runall"
        description="Run all JUnit testcases"/>

    <target name="test:runperf" description="Test performace of signing modules">
        <antcall target="test:signserver:performance"/>
    </target>
        

    <!-- =================================================================== -->
    <!-- Release part                                                        -->
    <!-- =================================================================== -->

    <!-- Deprecated: New target called release:zip -->
    <target name="ziprelease" depends="release:zip"/>

    <target name="release:zip" description="Make a zip file for SignServer release" >
        <property name="signserver.zipversion" value="${app.version.number}"/>
        <!-- <input message="Version tag for zipfile (ex 3_1_0):" addproperty="signserver.zipversion" /> -->
        <antcall target="-release:zip-lgpl21"/>
    </target>

    <target name="release:source-zip" description="Make a source zip files for SignServer release" >
        <property name="signserver.zipversion" value="${app.version.number}"/>
        <!-- <input message="Version tag for zipfile (ex 3_1_0):" addproperty="signserver.zipversion" /> -->
        <antcall target="-release:source-zip-lgpl21"/>
    </target>

    <target name="release:source-tarball" description="Make a source tarball for SignServer release">
        <property name="signserver.zipversion" value="${app.version.number}"/>
        <antcall target="-release:source-tarball-lgpl21"/>
    </target>

    <target name="-release:zip-lgpl21" depends="clean">
        <copy file="doc/lgpl-2.1.txt" tofile="LICENSE" />
        <zip destfile="../signserver-${signserver.zipversion}.zip">
            <zipfileset dir="." prefix="signserver-${signserver.zipversion}" filemode="600" dirmode="700">
                <include name="**/**" />
                <exclude name="doc/lgpl-**" />
                <exclude name="**/CVS/**" />
                <exclude name="signserver_build.properties" />
                <exclude name="conf/signserver_build.properties" />
                <exclude name="tmp/**" />
                <exclude name="p12/**" />
                <exclude name="dist/**" />
                <exclude name="lib/*.*ar" />
                <exclude name="out/**" />
                <exclude name="eclipseBuild/**" />
                <exclude name="**/*.class" />
                <exclude name=".classpath" />
                <exclude name=".project" />
                <exclude name=".eclipse/**" />
                <exclude name=".settings/**" />
                <exclude name="**/.cvsignore" />
                <exclude name="**/*.sh" />
                <exclude name="**/nbproject/private/**" />
            </zipfileset>
            <zipfileset dir="." prefix="signserver-${signserver.zipversion}" filemode="700" dirmode="700">
                <include name="**/*.sh" />
            </zipfileset>
        </zip>
        <delete file="LICENSE"/>
        <checksum file="../signserver-${signserver.zipversion}.zip" algorithm="SHA1" forceOverwrite="yes"/>
        <checksum file="../signserver-${signserver.zipversion}.zip" algorithm="SHA1" property="signserverSHA1"/>
        <echo message="SHA1 checksum: ${signserverSHA1}" />
    </target>

    <target name="-release:source-zip-lgpl21" depends="clean">
        <copy file="doc/lgpl-2.1.txt" tofile="LICENSE" />
        <zip destfile="../signserver-${signserver.zipversion}-src.zip">
            <zipfileset dir="." prefix="signserver-${signserver.zipversion}-src" filemode="600" dirmode="700">
                <include name="**/**" />
                <exclude name="**/CVS/**" />
                <exclude name="signserver_build.properties" />
                <exclude name="conf/signserver_build.properties" />
                <exclude name="tmp/**" />
                <exclude name="p12/**" />
                <exclude name="**/dist/**" />
                <exclude name="**/build/**" />
                <exclude name="SignServer-AdminGUI/lib/**" />
                <exclude name="out/**" />
                <exclude name="eclipseBuild/**" />
                <exclude name="**/*.class" />
                <exclude name="**/.cvsignore" />
                <exclude name="**/nbproject/private/**" />
                <exclude name="lib/**/*.jar" />
                <exclude name="lib/**/*.zip" />
                <exclude name="**/velocity.log" />
            </zipfileset>
            <zipfileset dir="." prefix="signserver-${signserver.zipversion}-src" filemode="700" dirmode="700">
                <include name="**/*.sh" />
            </zipfileset>
        </zip>
        <delete file="LICENSE"/>
        <checksum file="../signserver-${signserver.zipversion}-src.zip" algorithm="SHA1" forceOverwrite="yes"/>
        <checksum file="../signserver-${signserver.zipversion}-src.zip" algorithm="SHA1" property="signserverSHA1"/>
        <echo message="SHA1 checksum: ${signserverSHA1}" />
    </target>

    <target name="-release:source-tarball-lgpl21" depends="clean">
        <copy file="doc/lgpl-2.1.txt" tofile="LICENSE" />
        <property name="tarball.tar" value="../signserver-${signserver.zipversion}-src.tar" />
        <property name="tarball.tar.gz" value="${tarball.tar}.gz" />
        <tar tarfile="${tarball.tar}" basedir="." longfile="gnu">
            <exclude name="**"/>
            <tarfileset dir="." prefix="signserver-${signserver.zipversion}">
                <include name="**/**" />
                <exclude name="**/CVS/**" />
                <exclude name="signserver_build.properties" />
                <exclude name="conf/signserver_build.properties" />
                <exclude name="tmp/**" />
                <exclude name="p12/**" />
                <exclude name="mods-available/**" />
                <exclude name="**/dist/**" />
                <exclude name="**/build/**" />
                <exclude name="SignServer-AdminGUI/lib/**" />
                <exclude name="out/**" />
                <exclude name="eclipseBuild/**" />
                <exclude name="**/*.class" />
                <exclude name="**/.cvsignore" />
                <exclude name="**/nbproject/private/**" />
                <exclude name="lib/**/*.jar" />
                <exclude name="lib/**/*.zip" />
                <exclude name="**/velocity.log" />
            </tarfileset>
        </tar>
        <gzip destfile="${tarball.tar.gz}" src="${tarball.tar}"/>
        <delete file="${tarball.tar}"/>
        <delete file="LICENSE"/>
        <checksum file="${tarball.tar.gz}" algorithm="SHA1" forceOverwrite="yes"/>
        <checksum file="${tarball.tar.gz}" algorithm="SHA1" property="signserverSHA1"/>
        <echo message="SHA1 checksum: ${signserverSHA1}" />
    </target>

    <target name="release:bin-tarball" > <!-- depends="build" -->
        <property name="signserver.zipversion" value="${app.version.number}"/>
        <copy file="doc/lgpl-2.1.txt" tofile="LICENSE" />
        <property name="tarball.tar" value="../signserver-${signserver.zipversion}-bin.tar" />
        <property name="tarball.tar.gz" value="${tarball.tar}.gz" />
        <tar tarfile="${tarball.tar}" basedir="." longfile="gnu">
            <exclude name="**/**"/>
            <tarfileset dir="." prefix="signserver-${signserver.zipversion}">
                <include name="**/**" />
                <exclude name="signserver_build.properties" />
                <exclude name="conf/signserver_build.properties" />
                <exclude name="conf/admingui.properties" />
                <exclude name="lib/**" />
                <exclude name="modules/**" />
                <exclude name="p12/**" />
                <exclude name="tmp/**" />
                <exclude name="**/velocity.log" />
                <exclude name=".eclipse/**" />
                <exclude name=".settings/**" />
                <exclude name=".classpath" />
                <exclude name=".project" />
                <exclude name="**/.svn/**" />

                <exclude name="res/install/**" />
                <exclude name="res/test/**" />

                <!-- TODO: The following should be moved anyway -->
                <exclude name="bin/junit/**"/>
                <exclude name="bin/classes/**"/>
            </tarfileset>
        </tar>
        <gzip destfile="${tarball.tar.gz}" src="${tarball.tar}"/>
        <delete file="${tarball.tar}"/>
        <delete file="LICENSE"/>
        <checksum file="${tarball.tar.gz}" algorithm="SHA1" forceOverwrite="yes"/>
        <checksum file="${tarball.tar.gz}" algorithm="SHA1" property="signserverSHA1"/>
        <echo message="SHA1 checksum: ${signserverSHA1}" />
    </target>


    <!-- =================================================================== -->
    <!-- Tests                                                               -->
    <!-- =================================================================== -->

    <target name="test:signserver:pre-run">
        <fail message="Please set the environment variable 'SIGNSERVER_HOME' before running the junit tests." unless="env.SIGNSERVER_HOME"/>
        <echo> Important, in order for all tests to complete must the web service and validation web service interfaces be enabled, and HTTPS be turned on.</echo>
        <echo> For Test-SignServerWS to complete the following must be run first:
            bin/signserver.sh setproperties modules/SignServer-Test-SignServerWS/test-configuration.properties
            bin/signserver.sh reload 7001
        </echo>
        <echo> For Test-ValidationWS to complete the following must be run first:
            bin/signserver.sh setproperties modules/SignServer-Test-ValidationWS/test-configuration.properties
            bin/signserver.sh reload 7101
        </echo>

        <delete dir="${test.dir}/reports" />
        <mkdir dir="${test.dir}/reports/html" />
    </target>

    <!-- Target that can be called to explicit compile all tests for instance
        to get rid of build errors in your IDE if you are using Eclipse -->
    <target name="test:signserver:compile" depends="test:compile"/>
    <target name="test:compile" description="Compile all tests">
        <!-- SignServer-Test-SignServerWS -->
        <ant target="compile-test" inheritall="false"
            antfile="${testsignserverws.dir}/build.xml"/>

        <!-- SignServer-Test-ValidationWS -->
        <ant target="compile-test" inheritall="false"
            antfile="${testvalidationws.dir}/build.xml"/>

        <!-- SignServer-Test-AdminWS -->
        <ant target="compile-test" inheritall="false"
            antfile="${testadminws.dir}/build.xml"/>

        <!-- SignServer-Test-System -->
        <ant target="compile-test" inheritall="false"
            antfile="${testsystem.dir}/build.xml"/>
    </target>
	
    <target name="test:signserver:run" depends="test:signserver:pre-run, build"
        description="Run the default JUnit testcases">

        <!-- Run all tests defined in modules-project.properties. -->
        <subant target="test">
            <fileset dir="." includes="${tests.modules.includes}"/>
        </subant>
        <antcall target="test:report"/>
    </target>

    <target name="test:report"
        description="Create HTML test report from previously run tests">
        <!-- Create report for all tests -->
        <junitreport todir="${test.dir}/reports">
            <fileset dir="." includes="**/test/results/TEST-*.xml"/>
            <report format="frames" todir="${test.dir}/reports/html" />
        </junitreport>
        <property name="reportfile" location="${test.dir}/reports/html/index.html"/>
        <echo message="Test report available at: file://${reportfile}"/>
    </target>

    <target name="test:signserver:runall"
        depends="test:signserver:pre-run, build">

        <!-- Currently we run all tests by default. When that is no longer the
            case copy and modify the test:signserver:run target to here -->
        <antcall target="test:signserver:run"/>
    </target>

    <!-- Keept only for backwards compatibility -->
    <target name="test:signserver:runone" depends="test:runone"/>

    <target name="test:runone" description="Run a single JUnit-test specified -Dtest.runone=classname">
        <fail message="'test.runone' not set. Example -Dtest.runone=TestXMLSigner" unless="test.runone" />
        <ant antfile="${testsystem.dir}/build.xml" target="test:runone" usenativebasedir="true" inheritall="false">
            <property name="test.runone" value="${test.runone}"/>
        </ant>
    </target>

    <target name="test:pdfperformance" description="Run PDF performance test locally">
        <available file="${performanceTestToolJar}" property="perfTestExists"/>
        <antcall target="test:signserver:initpdfperformance" />
        <antcall target="j2ee:assert-run" />
        <property name="performancetest.host" value="http://localhost:8080/signserver/" />
        <property name="performancetest.runtime" value="3000" />
        <property name="performancetest.threads" value="10" />
        <property name="performancetest.intervalsize" value="1" />
        <property name="performancetest.statisticsdir" value="${tmp}/statistics/" />
        <mkdir dir="${performancetest.statisticsdir}"/>
        <echo>Starting performance tests..</echo>
        <echo>Assuming: </echo>
        <echo> - collected data to be found in ${performancetest.statisticsdir} (set by worker property STATISTICS.CSVFILE.OUTPUTDIR).</echo>
        <echo> - A PDF worker with name "PDFSigner" exists.</echo>
        <echo />
        <echo>Processed data can be found in ${performancetest.statisticsdir}.</echo>
        <delete dir="${testperf.dir}" />
        
        <ant antfile="modules/SignServer-Client-CLI/build.xml" target="run" usenativebasedir="true">
            <property name="application.args" value="pdfperformancetest test ${performancetest.runtime} ${performancetest.threads} ${performancetest.host}"/>
        </ant>
        <ant antfile="modules/SignServer-Client-CLI/build.xml" target="run" usenativebasedir="true">
            <property name="application.args" value="pdfperformancetest postprocess ${performancetest.statisticsdir} ${performancetest.intervalsize}"/>
        </ant>
    </target>


    <!-- =================================================================== -->
    <!-- Debian packaging                                                    -->
    <!-- =================================================================== -->
    <target name="debian-pkgdist" depends="clean, build" 
        description="Put together files to be included in Debian (or other) packages">
        <property name="pkg.basename" value="signserver3.3"/>
        <property name="pkg.version" value="3.3"/>
        <property name="prefix" value="usr/share"/>
        
        <delete dir="${debian.pkgdist.destdir}"/>
        
        <!-- libsignserver-common -->
        <mkdir dir="${debian.pkgdist.destdir}/libsignserver-common/${prefix}/${pkg.basename}"/>
        <copy todir="${debian.pkgdist.destdir}/libsignserver-common/${prefix}/${pkg.basename}/lib">
            <fileset dir="${base}/lib">
                <include name="SignServer-Common.jar"/>
                <include name="SignServer-ejb-interfaces.jar"/>
            </fileset>
        </copy>
        <mkdir dir="${debian.pkgdist.destdir}/libsignserver-common/usr/share/java"/>
        <symlink resource="../${pkg.basename}/lib/SignServer-Common.jar" 
            link="${debian.pkgdist.destdir}/libsignserver-common/usr/share/java/signserver-common-${pkg.version}.jar"/>
        <symlink resource="../${pkg.basename}/lib/SignServer-ejb-interfaces.jar" 
            link="${debian.pkgdist.destdir}/libsignserver-common/usr/share/java/signserver-ejb-interfaces-${pkg.version}.jar"/>
        <copy todir="${debian.pkgdist.destdir}/libsignserver-common/${prefix}/${pkg.basename}/lib">
            <fileset dir="${base}/lib">
                <include name="nblibraries.properties"/>
                <include name="readme.txt"/>
                
                <!-- Bouncycastle (all) -->
                <include name="1.6/**"/>
                
                <!-- EJB/Servlet (cli, gui) -->
                <include name="ext/ejb/**"/>
                <include name="ext/servlet-2.3.jar"/>
                
                <!-- CLI (both client and admin) -->
                <include name="ext/commons-cli-1.0.jar"/>
                
                <!-- Common (all) -->
                <include name="cert-cvc.jar"/>
                <include name="commons-collections-3.2.jar"/>
                <include name="commons-io-1.4.jar"/>
                <include name="commons-lang-2.4.jar"/>
                <include name="commons-logging.jar"/>
                <include name="ejbca-util.jar"/>
                <include name="log4j.jar"/>
            </fileset>
        </copy>
        <copy todir="${debian.pkgdist.destdir}/libsignserver-common/${prefix}/${pkg.basename}/conf">
            <fileset dir="${base}/conf">
                <include name="jndi.properties.*"/>
            </fileset>
        </copy>
        
        <!-- signserver-server -->
        <mkdir dir="${debian.pkgdist.destdir}/signserver-server/${prefix}/${pkg.basename}"/>
        <copy todir="${debian.pkgdist.destdir}/signserver-server/${prefix}/${pkg.basename}/bin">
            <fileset dir="${base}/bin">
                <include name="signserver"/>
                <include name="ant"/>
            </fileset>
        </copy>
        <copy todir="${debian.pkgdist.destdir}/signserver-server/${prefix}/${pkg.basename}/conf">
            <fileset dir="${base}/conf">
                <include name="signserver_build.properties.sample"/>
                <include name="signserver_cli.properties"/>
            </fileset>
        </copy>
        <copy todir="${debian.pkgdist.destdir}/signserver-server/${prefix}/${pkg.basename}/dist-client">
            <fileset dir="${base}/dist-client">
                <include name="SignServer-AdminCLI.jar"/>
            </fileset>
        </copy>
        <copy todir="${debian.pkgdist.destdir}/signserver-server/${prefix}/${pkg.basename}/lib">
            <fileset dir="${base}/lib">
                <exclude name="lib"/>
                <exclude name="*.mar"/>
                <exclude name="SignServer-Common.jar"/>     <!-- libsignserver-common -->
                <exclude name="SignServer-ejb-interfaces.jar"/>      <!-- libsignserver-common -->
            </fileset>
        </copy>
        <copy todir="${debian.pkgdist.destdir}/signserver-server/${prefix}/${pkg.basename}/doc">
            <fileset dir="${base}/doc"/>
        </copy>
        <copy todir="${debian.pkgdist.destdir}/signserver-server/${prefix}/${pkg.basename}/lib">
            <fileset dir="${base}/lib">
               
                <!-- EJB -->
                <include name="ext/ejb/**"/>
                <include name="hibernate/**"/>
                <include name="javaee-api-6.0/**"/>
                <include name="javaee-web-api-6.0/**"/>
                
                <!-- Quartz -->
                <include name="quartz/**"/>
                
                <!-- File uploads -->
                <include name="commons-fileupload-1.2.1.jar"/>
            </fileset>
        </copy>
        <copy todir="${debian.pkgdist.destdir}/signserver-server/${prefix}/${pkg.basename}/mods-available">
            <fileset dir="${base}/mods-available">
                <include name="10_signserverejb.properties"/>
                <include name="20_adminws.properties"/>
                <include name="20_signserverws.properties"/>
                <include name="20_validationws.properties"/>
                <include name="30_healthcheck.properties"/>
                <include name="30_module.log4j.properties"/>
                <include name="30_signserverweb.properties"/>
                <include name="30_webdoc.properties"/>
            </fileset>
        </copy>
        <mkdir dir="${debian.pkgdist.destdir}/signserver-server/${prefix}/${pkg.basename}/p12"/>
        <copy todir="${debian.pkgdist.destdir}/signserver-server/${prefix}/${pkg.basename}/res">
            <fileset dir="${base}/res">
                <exclude name="install/**"/>
                <exclude name="module-configs/**"/>
                <exclude name="test/**"/>
            </fileset>
        </copy>
        <copy todir="${debian.pkgdist.destdir}/signserver-server/${prefix}/${pkg.basename}">
            <fileset dir="${base}">
                <include name="build.xml"/>
                <include name="ChangeLog.txt"/>
                <include name="README"/>
            </fileset>
        </copy>
        
        <!-- signserver-admingui -->
        <mkdir dir="${debian.pkgdist.destdir}/signserver-admingui/${prefix}/${pkg.basename}"/>
        <copy todir="${debian.pkgdist.destdir}/signserver-admingui/${prefix}/${pkg.basename}/bin">
            <fileset dir="${base}/bin">
                <include name="admingui-splash.png"/>
                <include name="signserver-gui"/>
            </fileset>
        </copy>
        <copy todir="${debian.pkgdist.destdir}/signserver-admingui/${prefix}/${pkg.basename}/conf">
            <fileset dir="${base}/conf">
                <include name="admingui_default.properties"/>
            </fileset>
        </copy>
        <copy todir="${debian.pkgdist.destdir}/signserver-admingui/${prefix}/${pkg.basename}/lib">
            <fileset dir="${base}/lib">
                <!-- TODO -->
                <exclude name="**"/>
            </fileset>
        </copy>
        <copy todir="${debian.pkgdist.destdir}/signserver-admingui/${prefix}/${pkg.basename}/dist-client">
            <fileset dir="${base}/dist-client">
                <include name="SignServer-AdminGUI.jar"/>
            </fileset>
        </copy>
        
        <!-- signserver-client -->
        <mkdir dir="${debian.pkgdist.destdir}/signserver-client/${prefix}/${pkg.basename}"/>
        <copy todir="${debian.pkgdist.destdir}/signserver-client/${prefix}/${pkg.basename}/bin">
            <fileset dir="${base}/bin">
                <include name="signclient"/>
            </fileset>
        </copy>
        <copy todir="${debian.pkgdist.destdir}/signserver-client/${prefix}/${pkg.basename}/dist-client">
            <fileset dir="${base}/dist-client">
                <include name="SignServer-Client-CLI.jar"/>
            </fileset>
        </copy>
        <copy todir="${debian.pkgdist.destdir}/signserver-client/${prefix}/${pkg.basename}/lib">
            <fileset dir="${base}/lib">
                <!-- TODO -->
                <exclude name="**"/>
            </fileset>
        </copy>
        
        <!-- libsignserver-modules -->
        <mkdir dir="${debian.pkgdist.destdir}/libsignserver-modules/${prefix}/${pkg.basename}"/>
        <copy todir="${debian.pkgdist.destdir}/libsignserver-modules/${prefix}/${pkg.basename}/lib">
            <fileset dir="${base}/lib">
                <!-- TODO -->
                <exclude name="**"/>
            </fileset>
        </copy>
        <copy todir="${debian.pkgdist.destdir}/libsignserver-modules/${prefix}/${pkg.basename}/mods-available">
            <fileset dir="${base}/mods-available">
                <include name="40_module.cmssigner.properties"/>
                <include name="40_module.mrtdsigner.properties"/>
                <include name="40_module.mrtdsodsigner.properties"/>
                <include name="40_module.odfsigner.properties"/>
                <include name="40_module.ooxmlsigner.properties"/>
                <include name="40_module.pdfsigner.properties"/>
                <include name="40_module.renewal.properties"/>
                <include name="40_module.tsa.properties"/>
                <include name="40_module.xmlsigner.properties"/>
                <include name="40_module.xmlvalidator.properties"/>
            </fileset>
        </copy>
        
        <!-- signserver-doc -->
        <!-- TODO -->

    </target>


    <!-- =================================================================== -->
    <!-- Legacy packaging                                                    -->
    <!-- =================================================================== -->
    
    <!-- Build preparation for package distribution                         -->
    <target name="pkgdist" depends="signserver-cli, signserver-pkgdist"/>
    
    <target name="signserver-pkgdist" depends="signserver-pkgdist-server, signserver-pkgdist-mgmt,genservercert.jar, setdbtype.jar">
    </target>
    		
    <target name="signserver-pkgdist-server" depends="genservercert.jar, setdbtype.jar">
        <condition property="pkgdist.destdir" value="${env.DESTDIR}" else="${pkg.dist.dir}">
            <isset property="${env.DESTDIR}"/>
        </condition>
		
        <mkdir dir="${pkgdist.destdir}"/>

        <property name="pkgdist.deploydir" value="${pkgdist.destdir}/usr/share/signserver-server/deploy"/>
        <mkdir dir="${pkgdist.deploydir}"/>
        <copy todir="${pkgdist.deploydir}" >
            <fileset dir="../lib">
                <include name="signserver.ear"/>
            </fileset>
            <fileset dir="../res/appserver/jboss">
                <include name="signserver-ds.xml"/>
                <include name="signserver-mysql-cluster-ds.xml"/>
            </fileset>
        </copy>

        <property name="pkgdist.webconfdir" value="${pkgdist.destdir}/usr/share/signserver-server/webconf"/>
        <mkdir dir="${pkgdist.webconfdir}"/>
        <copy todir="${pkgdist.webconfdir}" >
            <fileset dir="../res/install/common">
                <include name="tomcat-server*.xml"/>
            </fileset>
        </copy>
        <property name="pkgdist.dbconfdir" value="${pkgdist.destdir}/usr/share/signserver-server/dbconf"/>
        <mkdir dir="${pkgdist.dbconfdir}"/>
        <copy todir="${pkgdist.dbconfdir}" >
            <fileset dir="../res/deploy/ejb/persistence-mappings">
                <include name="**/**"/>
            </fileset>
        </copy>
        <property name="pkgdist.logconfdir" value="${pkgdist.destdir}/usr/share/signserver-server/logconf"/>
        <mkdir dir="${pkgdist.logconfdir}"/>
        <copy todir="${pkgdist.logconfdir}" >
            <fileset dir="../res/install/common">
                <include name="jboss-log4j*.xml"/>
            </fileset>
        </copy>
        <property name="pkgdist.gencertdir" value="${pkgdist.destdir}/usr/share/signserver-server/lib"/>
        <mkdir dir="${pkgdist.gencertdir}"/>
        <copy todir="${pkgdist.gencertdir}" >
            <fileset dir="${tmp}">
                <include name="${genServerCertJar}"/>
            </fileset>
        </copy>
        <copy todir="${pkgdist.gencertdir}" >
            <fileset dir="${lib}/1.6">
                <include name="bcprov-jdk.jar"/>
            </fileset>
        </copy>
        <property name="pkgdist.setdbtypedir" value="${pkgdist.destdir}/usr/share/signserver-server/lib"/>
        <mkdir dir="${pkgdist.setdbtypedir}"/>
        <copy todir="${pkgdist.setdbtypedir}" >
            <fileset dir="${tmp}">
                <include name="${setDBTypeJar}"/>
            </fileset>
        </copy>
        <property name="pkgdist.initscriptdir" value="${pkgdist.destdir}/usr/share/signserver-server/bin"/>
        <mkdir dir="${pkgdist.initscriptdir}"/>
        <copy todir="${pkgdist.initscriptdir}" >
            <fileset dir="../res/install/common">
                <include name="signserver*.sh"/>
            </fileset>
            <fileset dir="../bin">
                <include name="genservercert.sh"/>
            </fileset>
        </copy>

    </target>
	 	
    <target name="signserver-pkgdist-mgmt" depends="genservercert.jar, setdbtype.jar">
        <condition property="pkgdist.destdir" value="${env.DESTDIR}" else="${pkg.dist.dir}">
            <isset property="${env.DESTDIR}"/>
        </condition>
	
        <mkdir dir="${pkgdist.destdir}"/>
	 		
        <property name="pkgdist.bindir" value="${pkgdist.destdir}/usr/share/signserver-mgmt/bin" />
        <mkdir dir="${pkgdist.bindir}"/>
		
        <property name="pkgdist.clilibdir" value="${pkgdist.destdir}/usr/share/signserver-mgmt/lib" />
        <mkdir dir="${pkgdist.clilibdir}"/>
     		
        <copy todir="${pkgdist.bindir}">
            <fileset dir="../bin">
                <include name="signserver.sh"/>
                <include name="signserver.cmd"/>
                <include name="log4j.properties"/>
            </fileset>
        </copy>
        <copy todir="${pkgdist.clilibdir}">
            <fileset dir="../lib">
                <include name="signserver-cli.jar"/>
            </fileset>
            <fileset dir="../lib/ext">
                <include name="jbossall-client.jar"/>
            </fileset>
            <fileset dir="${lib}/ext">
                <include name="log4j.jar"/>
                <include name="cert-cvc.jar"/>
                <include name="ejbca-util.jar"/>
                <include name="commons-lang-2.4.jar"/>
            </fileset>
            <fileset dir="${lib}/ext/1.6">
                <include name="bcprov-jdk.jar"/>
                <include name="bcmail-jdk.jar"/>
            </fileset>
            <fileset dir="${lib}/ext/asm">
                <include name="asm-3.1.jar"/>
                <include name="asm-commons-3.1.jar"/>
            </fileset>
            <fileset dir="${lib}/ext/ext/ejb">
                <include name="jboss-ejb3x.jar"/>
            </fileset>
        </copy>

        <property name="pkgdist.sampleconfigdir" value="${pkgdist.destdir}/usr/share/signserver-mgmt/sample-configs" />
        <mkdir dir="${pkgdist.sampleconfigdir}"/>
        <copy todir="${pkgdist.sampleconfigdir}">
            <fileset dir="doc/sample-configs">
                <include name="*.*"/>
            </fileset>
        </copy>

        <property name="pkgdist.moduledir" value="${pkgdist.destdir}/usr/share/signserver-mgmt/modules" />
        <mkdir dir="${pkgdist.moduledir}"/>
        <copy todir="${pkgdist.moduledir}">
            <fileset dir="../lib">
                <include name="*.mar"/>
            </fileset>
        </copy>
    </target>


    <!-- =================================================================== -->
    <!-- Other                                                               -->
    <!-- =================================================================== -->

    <target name="signserver-cli" description="Build SignServer AdminCLI">
        <ant inheritall="false" target="jar" antfile="${admincli.dir}/build.xml"/>
    </target>

    <target name="genservercert.jar" depends="signserver-cli">
        <ant inheritall="false" target="jar" antfile="${admincli.dir}/build.xml"/>
        <jar destfile="${tmp}/${genServerCertJar}" basedir="${base}/modules/SignServer-AdminCLI/build/classes/">
            <manifest>
                <attribute name="Class-Path" value="bcprov-jdk.jar"/>
                <attribute name="Main-Class" value="org.signserver.cli.genservercert.GenServerCertificate"/>
            </manifest>
            <include name="org/signserver/cli/genservercert/*.class"/>
        </jar>
    </target>
    <target name="setdbtype.jar" depends="signserver-cli">
        <jar destfile="${tmp}/${setDBTypeJar}" basedir="${base}/modules/SignServer-AdminCLI/build/classes/">
            <manifest>
                <attribute name="Class-Path" value=""/>
                <attribute name="Main-Class" value="org.signserver.cli.setdbtype.SetDBType"/>
            </manifest>
            <include name="org/signserver/cli/setdbtype/*.class"/>
        </jar>
    </target>
    
     <!-- Target Used to perform validations using CLI -->
    <target name="validationClient" if="validationclient.conditionenabled" >
        <ant target="test" inheritall="false"
            antfile="${clientvalidationcli.dir}/build.xml"/>
    </target>

</project>
